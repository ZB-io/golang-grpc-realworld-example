{
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go": {
    "function_dict": {
      "GenerateToken": {
        "code": "func GenerateToken(id uint) (string, error) {\n\treturn generateToken(id, time.Now())\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "string",
          "error"
        ],
        "associated_func": [
          "generateToken"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GenerateTokenWithTime": {
        "code": "func GenerateTokenWithTime(id uint, t time.Time) (string, error) {\n\n\treturn generateToken(id, t)\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "time.Time",
          "string",
          "error"
        ],
        "associated_func": [
          "generateToken"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetUserID": {
        "code": "func GetUserID(ctx context.Context) (uint, error) {\n\ttokenString, err := grpc_auth.AuthFromMD(ctx, \"Token\")\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\n\ttoken, err := jwt.ParseWithClaims(tokenString, &claims{}, func(token *jwt.Token) (interface{}, error) {\n\t\treturn jwtSecret, nil\n\t})\n\tif !token.Valid {\n\t\tif ve, ok := err.(*jwt.ValidationError); ok {\n\t\t\tif ve.Errors&jwt.ValidationErrorMalformed != 0 {\n\t\t\t\treturn 0, errors.New(\"invalid token: it's not even a token\")\n\t\t\t} else if ve.Errors&(jwt.ValidationErrorExpired|jwt.ValidationErrorNotValidYet) != 0 {\n\t\t\t\treturn 0, errors.New(\"token expired\")\n\t\t\t} else {\n\t\t\t\treturn 0, fmt.Errorf(\"invalid token: couldn't handle this token; %w\", err)\n\t\t\t}\n\t\t} else {\n\t\t\treturn 0, fmt.Errorf(\"invalid token: couldn't handle this token; %w\", err)\n\t\t}\n\t}\n\n\tc, ok := token.Claims.(*claims)\n\tif !ok {\n\t\treturn 0, errors.New(\"invalid token: cannot map token to claims\")\n\t}\n\n\tif c.ExpiresAt < time.Now().Unix() {\n\t\treturn 0, errors.New(\"token expired\")\n\t}\n\n\treturn c.UserID, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "uint",
          "error"
        ],
        "associated_func": [
          "grpc_auth.AuthFromMD"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.2.0/auth/metadata.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "generateToken": {
        "code": "func generateToken(id uint, now time.Time) (string, error) {\n\tclaims := &claims{\n\t\tid,\n\t\tjwt.StandardClaims{\n\t\t\tExpiresAt: now.Add(time.Hour * 72).Unix(),\n\t\t},\n\t}\n\n\ttoken := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)\n\tt, err := token.SignedString(jwtSecret)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn t, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "time.Time",
          "string",
          "error"
        ],
        "associated_func": null,
        "dependent_files": null,
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "claims": "type claims struct {\n\tUserID uint `json:\"user_id\"`\n\tjwt.StandardClaims\n}",
      "context.Context": "",
      "error": "",
      "string": "",
      "time.Time": "",
      "uint": ""
    },
    "package_dict": {
      "grpc_auth": "github.com/grpc-ecosystem/go-grpc-middleware/auth",
      "jwt-go": "github.com/dgrijalva/jwt-go"
    },
    "package_name": "auth",
    "imports": "import (\n\t\"context\"\n\t\"errors\"\n\t\"fmt\"\n\t\"os\"\n\t\"time\"\n\t\"github.com/dgrijalva/jwt-go\"\n\tgrpc_auth \"github.com/grpc-ecosystem/go-grpc-middleware/auth\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go": {
    "function_dict": {
      "AutoMigrate": {
        "code": "func AutoMigrate(db *gorm.DB) error {\n\terr := db.AutoMigrate(\n\t\t&model.User{},\n\t\t&model.Article{},\n\t\t&model.Tag{},\n\t\t&model.Comment{},\n\t).Error\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "error",
          "sync.RWMutex",
          "207.0xc0003c7b60.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DropTestDB": {
        "code": "func DropTestDB(d *gorm.DB) error {\n\td.Close()\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "error",
          "sync.RWMutex",
          "207.0xc00065c180.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "New": {
        "code": "func New() (*gorm.DB, error) {\n\ts, err := dsn()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tvar d *gorm.DB\n\tfor i := 0; i < 10; i++ {\n\t\td, err = gorm.Open(\"mysql\", s)\n\t\tif err == nil {\n\t\t\tbreak\n\t\t}\n\t\ttime.Sleep(1 * time.Second)\n\t}\n\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\td.DB().SetMaxIdleConns(3)\n\td.LogMode(false)\n\n\treturn d, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "error",
          "sync.RWMutex",
          "207.0xc000219800.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])"
        ],
        "associated_func": [
          "dsn",
          "gorm.Open"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "NewTestDB": {
        "code": "func NewTestDB() (*gorm.DB, error) {\n\terr := godotenv.Load(\"../env/test.env\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\ts, err := dsn()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tmutex.Lock()\n\tif !txdbInitialized {\n\t\t_d, err := gorm.Open(\"mysql\", s)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tAutoMigrate(_d)\n\n\t\ttxdb.Register(\"txdb\", \"mysql\", s)\n\t\ttxdbInitialized = true\n\t}\n\tmutex.Unlock()\n\n\tc, err := sql.Open(\"txdb\", uuid.New().String())\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\td, err := gorm.Open(\"mysql\", c)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\td.DB().SetMaxIdleConns(3)\n\td.LogMode(false)\n\n\treturn d, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "error",
          "sync.RWMutex",
          "207.0xc000427680.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])"
        ],
        "associated_func": [
          "godotenv.Load",
          "dsn",
          "gorm.Open",
          "AutoMigrate",
          "uuid.New",
          "gorm.Open"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/go/pkg/mod/github.com/joho/godotenv@v1.3.0/godotenv.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go",
          "/go/pkg/mod/github.com/google/uuid@v1.1.1/version4.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Seed": {
        "code": "func Seed(db *gorm.DB) error {\n\tusers := struct {\n\t\tUsers []model.User\n\t}{}\n\n\tbs, err := ioutil.ReadFile(\"db/seed/users.toml\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif _, err := toml.Decode(string(bs), &users); err != nil {\n\t\treturn err\n\t}\n\n\tfor _, u := range users.Users {\n\t\tif err := db.Create(&u).Error; err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "error",
          "sync.RWMutex",
          "207.0xc00021b920.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])"
        ],
        "associated_func": [
          "toml.Decode",
          "string"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/go/pkg/mod/github.com/!burnt!sushi/toml@v0.3.1/decode.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "dsn": {
        "code": "func dsn() (string, error) {\n\thost := os.Getenv(\"DB_HOST\")\n\tif host == \"\" {\n\t\treturn \"\", errors.New(\"$DB_HOST is not set\")\n\t}\n\n\tuser := os.Getenv(\"DB_USER\")\n\tif user == \"\" {\n\t\treturn \"\", errors.New(\"$DB_USER is not set\")\n\t}\n\n\tpassword := os.Getenv(\"DB_PASSWORD\")\n\tif password == \"\" {\n\t\treturn \"\", errors.New(\"$DB_PASSWORD is not set\")\n\t}\n\n\tname := os.Getenv(\"DB_NAME\")\n\tif name == \"\" {\n\t\treturn \"\", errors.New(\"$DB_NAME is not set\")\n\t}\n\n\tport := os.Getenv(\"DB_PORT\")\n\tif port == \"\" {\n\t\treturn \"\", errors.New(\"$DB_PORT is not set\")\n\t}\n\n\toptions := \"charset=utf8mb4&parseTime=True&loc=Local\"\n\n\treturn fmt.Sprintf(\"%s:%s@(%s:%s)/%s?%s\",\n\t\tuser, password, host, port, name, options), nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "error"
        ],
        "associated_func": null,
        "dependent_files": null,
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "207.0xc000219800.false": "",
      "207.0xc00021b920.false": "",
      "207.0xc0003c7b60.false": "",
      "207.0xc000427680.false": "",
      "207.0xc00065c180.false": "",
      "Callback": "",
      "DB": "",
      "Dialect": "",
      "SQLCommon": "",
      "bool": "",
      "error": "",
      "func() ([time.Time])": "",
      "gorm.DB": "type DB struct {\n\tsync.RWMutex\n\tValue\t\t\tinterface{}\n\tError\t\t\terror\n\tRowsAffected\t\tint64\n\tdb\t\t\tSQLCommon\n\tblockGlobalUpdate\tbool\n\tlogMode\t\t\tlogModeValue\n\tlogger\t\t\tlogger\n\tsearch\t\t\t*search\n\tvalues\t\t\tsync.Map\n\tparent\t\t\t*DB\n\tcallbacks\t\t*Callback\n\tdialect\t\t\tDialect\n\tsingularTable\t\tbool\n\tnowFuncOverride\t\tfunc() time.Time\n}",
      "int64": "",
      "logModeValue": "",
      "logger": "",
      "search": "",
      "string": "",
      "sync.Map": "",
      "sync.RWMutex": ""
    },
    "package_dict": {
      "go-txdb": "github.com/DATA-DOG/go-txdb",
      "godotenv": "github.com/joho/godotenv",
      "gorm": "github.com/jinzhu/gorm",
      "model": "github.com/raahii/golang-grpc-realworld-example/model",
      "toml": "github.com/BurntSushi/toml",
      "uuid": "github.com/google/uuid"
    },
    "package_name": "db",
    "imports": "import (\n\t\"database/sql\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"sync\"\n\t\"time\"\n\t\"os\"\n\t\"github.com/BurntSushi/toml\"\n\t\"github.com/google/uuid\"\n\t\"github.com/jinzhu/gorm\"\n\t\"github.com/joho/godotenv\"\n\t\"github.com/raahii/golang-grpc-realworld-example/model\"\n\t\"github.com/DATA-DOG/go-txdb\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/seed/seed.go": {
    "function_dict": {
      "main": {
        "code": "func main() {\n\td, err := db.New()\n\n\tif err != nil {\n\t\tlog.Fatal(fmt.Errorf(\"failed to connect database: %w\", err))\n\t}\n\n\tif err := db.Seed(d); err != nil {\n\t\tlog.Fatal(fmt.Errorf(\"failed to seed: %w\", err))\n\t}\n}",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "db.New",
          "db.Seed"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      }
    },
    "struct_dict": {},
    "package_dict": {
      "db": "github.com/raahii/golang-grpc-realworld-example/db"
    },
    "package_name": "main",
    "imports": "import (\n\t\"fmt\"\n\t\"log\"\n\t\"github.com/raahii/golang-grpc-realworld-example/db\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/gateway/gateway.go": {
    "function_dict": {
      "main": {
        "code": "func main() {\n\tflag.Parse()\n\tdefer glog.Flush()\n\n\tif err := run(); err != nil {\n\t\tglog.Fatal(err)\n\t}\n}",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "glog.Flush",
          "run",
          "glog.Fatal"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b/glog.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/gateway/gateway.go",
          "/go/pkg/mod/github.com/golang/glog@v0.0.0-20160126235308-23def4e6c14b/glog.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      },
      "run": {
        "code": "func run() error {\n\tctx := context.Background()\n\tctx, cancel := context.WithCancel(ctx)\n\tdefer cancel()\n\n\tropts := []runtime.ServeMuxOption{\n\t\truntime.WithMarshalerOption(runtime.MIMEWildcard, &runtime.JSONPb{OrigName: true, EmitDefaults: true}),\n\t}\n\n\tmux := runtime.NewServeMux(ropts...)\n\topts := []grpc.DialOption{grpc.WithInsecure()}\n\n\terr := gw.RegisterUsersHandlerFromEndpoint(ctx, mux, *echoEndpoint, opts)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\terr = gw.RegisterArticlesHandlerFromEndpoint(ctx, mux, *echoEndpoint, opts)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tlog.Println(\"starting gateway server on port 3000\")\n\treturn http.ListenAndServe(\":3000\", mux)\n}",
        "is_file_function": true,
        "associated_struct": [
          "error"
        ],
        "associated_func": [
          "context.Background",
          "context.WithCancel",
          "cancel",
          "runtime.WithMarshalerOption",
          "runtime.NewServeMux",
          "grpc.WithInsecure",
          "gw.RegisterUsersHandlerFromEndpoint",
          "gw.RegisterArticlesHandlerFromEndpoint"
        ],
        "dependent_files": [
          "/go/pkg/mod/golang.org/x/net@v0.0.0-20191002035440-2ec189313ef0/context/context.go",
          "/go/pkg/mod/golang.org/x/net@v0.0.0-20191002035440-2ec189313ef0/context/go17.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/dialoptions.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "error": ""
    },
    "package_dict": {
      "context": "golang.org/x/net/context",
      "glog": "github.com/golang/glog",
      "grpc": "google.golang.org/grpc",
      "gw": "github.com/raahii/golang-grpc-realworld-example/proto",
      "runtime": "github.com/grpc-ecosystem/grpc-gateway/runtime"
    },
    "package_name": "main",
    "imports": "import (\n\t\"flag\"\n\t\"log\"\n\t\"net/http\"\n\t\"github.com/golang/glog\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/runtime\"\n\t\"golang.org/x/net/context\"\n\t\"google.golang.org/grpc\"\n\tgw \"github.com/raahii/golang-grpc-realworld-example/proto\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/article.go": {
    "function_dict": {
      "CreateArticle": {
        "code": "func (h *Handler) CreateArticle(ctx context.Context, req *pb.CreateAritcleRequest) (*pb.ArticleResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"create article\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\tra := req.GetArticle()\n\ttags := make([]model.Tag, 0, len(ra.GetTagList()))\n\tfor _, t := range ra.GetTagList() {\n\t\ttags = append(tags, model.Tag{Name: t})\n\t}\n\n\tarticle := model.Article{\n\t\tTitle:       ra.GetTitle(),\n\t\tDescription: ra.GetDescription(),\n\t\tBody:        ra.GetBody(),\n\t\tAuthor:      *currentUser,\n\t\tTags:        tags,\n\t}\n\n\terr = article.Validate()\n\tif err != nil {\n\t\tmsg := \"validation error\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\terr = h.as.Create(&article)\n\tif err != nil {\n\t\tmsg := \"Failed to create user.\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Canceled, msg)\n\t}\n\n\tfavorited := true\n\tpa := article.ProtoArticle(favorited)\n\n\tfollowing, err := h.us.IsFollowing(currentUser, &article.Author)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\tpa.Author = article.Author.ProtoProfile(following)\n\n\treturn &pb.ArticleResponse{Article: pa}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.CreateAritcleRequest",
          "Handler",
          "pb.ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "CreateAritcleRequest_Article",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "make",
          "len",
          "append",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DeleteArticle": {
        "code": "func (h *Handler) DeleteArticle(ctx context.Context, req *pb.DeleteArticleRequest) (*pb.Empty, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"delete article\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tmsg := \"unauthenticated\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := \"not user found\"\n\t\terr = fmt.Errorf(\"token is valid but the user not found: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tslug := req.GetSlug()\n\tarticleID, err := strconv.Atoi(slug)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", slug)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tif article.Author.ID != currentUser.ID {\n\t\tmsg := fmt.Sprintf(\"user(id=%d) attempted to update other user's article(id=%d)\",\n\t\t\tcurrentUser.ID, article.ID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"forbidden\")\n\t}\n\n\tif err := h.as.Delete(article); err != nil {\n\t\tmsg := \"failed to delete article\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\treturn &pb.Empty{}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.DeleteArticleRequest",
          "Handler",
          "pb.Empty",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "uint",
          "status.Error",
          "status.Errorf",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "FavoriteArticle": {
        "code": "func (h *Handler) FavoriteArticle(ctx context.Context, req *pb.FavoriteArticleRequest) (*pb.ArticleResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"favorite article\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tmsg := \"unauthenticated\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := \"not user found\"\n\t\terr = fmt.Errorf(\"token is valid but the user not found: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tslug := req.GetSlug()\n\tarticleID, err := strconv.Atoi(slug)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", slug)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\terr = h.as.AddFavorite(article, currentUser)\n\tif err != nil {\n\t\tmsg := \"failed to add favorite\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\tfavorited := true\n\tpa := article.ProtoArticle(favorited)\n\tfollowing, err := h.us.IsFollowing(currentUser, &article.Author)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\tpa.Author = article.Author.ProtoProfile(following)\n\n\treturn &pb.ArticleResponse{Article: pa}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.FavoriteArticleRequest",
          "Handler",
          "pb.ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "uint",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetArticle": {
        "code": "func (h *Handler) GetArticle(ctx context.Context, req *pb.GetArticleRequest) (*pb.ArticleResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"get article\")\n\n\tarticleID, err := strconv.Atoi(req.GetSlug())\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", req.GetSlug())\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tpa := article.ProtoArticle(false)\n\t\tpa.Author = article.Author.ProtoProfile(false)\n\t\treturn &pb.ArticleResponse{Article: pa}, nil\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"token is valid but the user not found\")\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tfavorited, err := h.as.IsFavorited(article, currentUser)\n\tif err != nil {\n\t\tmsg := \"failed to get favorited status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, \"internal server error\")\n\t}\n\tpa := article.ProtoArticle(favorited)\n\n\tfollowing, err := h.us.IsFollowing(currentUser, &article.Author)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\tpa.Author = article.Author.ProtoProfile(following)\n\n\treturn &pb.ArticleResponse{Article: pa}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.GetArticleRequest",
          "Handler",
          "pb.ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "status.Error",
          "uint",
          "status.Error",
          "auth.GetUserID",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetArticles": {
        "code": "func (h *Handler) GetArticles(ctx context.Context, req *pb.GetArticlesRequest) (*pb.ArticlesResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"get articles\")\n\n\tlimitQuery := req.GetLimit()\n\tif limitQuery == 0 {\n\t\tlimitQuery = 20\n\t}\n\n\tvar favoritedBy *model.User\n\tif req.GetFavorited() != \"\" {\n\t\tvar err error\n\t\tfavoritedBy, err = h.us.GetByUsername(req.GetFavorited())\n\t\tif err != nil {\n\n\t\t\tfavoritedBy = nil\n\t\t}\n\t}\n\n\tas, err := h.as.GetArticles(req.GetTag(), req.GetAuthor(), favoritedBy, limitQuery, req.GetOffset())\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"failed to search articles in the database\")\n\t\treturn nil, status.Error(codes.Aborted, \"internal server error\")\n\t}\n\n\tvar currentUser *model.User\n\tuserID, err := auth.GetUserID(ctx)\n\tif err == nil {\n\t\tcurrentUser, err = h.us.GetByID(userID)\n\t\tif err != nil {\n\t\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t\t}\n\t}\n\n\tpas := make([]*pb.Article, 0, len(as))\n\tfor _, a := range as {\n\n\t\tfavorited, err := h.as.IsFavorited(&a, currentUser)\n\t\tif err != nil {\n\t\t\tmsg := \"failed to get favorited status\"\n\t\t\th.logger.Error().Err(err).Msg(msg)\n\t\t\treturn nil, status.Error(codes.Aborted, \"internal server error\")\n\t\t}\n\t\tpa := a.ProtoArticle(favorited)\n\n\t\tfollowing, err := h.us.IsFollowing(currentUser, &a.Author)\n\t\tif err != nil {\n\t\t\tmsg := \"failed to get following status\"\n\t\t\th.logger.Error().Err(err).Msg(msg)\n\t\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t\t}\n\t\tpa.Author = a.Author.ProtoProfile(following)\n\n\t\tpas = append(pas, pa)\n\t}\n\n\treturn &pb.ArticlesResponse{Articles: pas, ArticlesCount: int32(len(pas))}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.GetArticlesRequest",
          "Handler",
          "pb.ArticlesResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "int64",
          "int64",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article",
          "int32"
        ],
        "associated_func": [
          "status.Error",
          "auth.GetUserID",
          "status.Error",
          "make",
          "len",
          "status.Error",
          "status.Error",
          "append",
          "int32",
          "len"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFeedArticles": {
        "code": "func (h *Handler) GetFeedArticles(ctx context.Context, req *pb.GetFeedArticlesRequest) (*pb.ArticlesResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"get feed article\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\tuserIDs, err := h.us.GetFollowingUserIDs(currentUser)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"failed to get following user ids of user %d\", currentUser.ID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\n\tlimitQuery := req.GetLimit()\n\tif limitQuery == 0 {\n\t\tlimitQuery = 20\n\t}\n\n\tas, err := h.as.GetFeedArticles(userIDs, limitQuery, req.GetOffset())\n\tif err != nil {\n\t\tmsg := \"failed to get articles by user ids\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\n\tpas := make([]*pb.Article, 0, len(as))\n\tfor _, a := range as {\n\n\t\tfavorited, err := h.as.IsFavorited(&a, currentUser)\n\t\tif err != nil {\n\t\t\tmsg := \"failed to get favorited status\"\n\t\t\th.logger.Error().Err(err).Msg(msg)\n\t\t\treturn nil, status.Error(codes.Aborted, \"internal server error\")\n\t\t}\n\t\tpa := a.ProtoArticle(favorited)\n\n\t\tfollowing, err := h.us.IsFollowing(currentUser, &a.Author)\n\t\tif err != nil {\n\t\t\tmsg := \"failed to get following status\"\n\t\t\th.logger.Error().Err(err).Msg(msg)\n\t\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t\t}\n\t\tpa.Author = a.Author.ProtoProfile(following)\n\n\t\tpas = append(pas, pa)\n\t}\n\n\treturn &pb.ArticlesResponse{Articles: pas, ArticlesCount: int32(len(pas))}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.GetFeedArticlesRequest",
          "Handler",
          "pb.ArticlesResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "int64",
          "int64",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article",
          "int32"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "status.Error",
          "make",
          "len",
          "status.Error",
          "status.Error",
          "append",
          "int32",
          "len"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UnfavoriteArticle": {
        "code": "func (h *Handler) UnfavoriteArticle(ctx context.Context, req *pb.UnfavoriteArticleRequest) (*pb.ArticleResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"unfavorite article\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tmsg := \"unauthenticated\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := \"not user found\"\n\t\terr = fmt.Errorf(\"token is valid but the user not found: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tslug := req.GetSlug()\n\tarticleID, err := strconv.Atoi(slug)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", slug)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\terr = h.as.DeleteFavorite(article, currentUser)\n\tif err != nil {\n\t\tmsg := \"failed to remove favorite\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\tfavorited := false\n\tpa := article.ProtoArticle(favorited)\n\tfollowing, err := h.us.IsFollowing(currentUser, &article.Author)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\tpa.Author = article.Author.ProtoProfile(following)\n\n\treturn &pb.ArticleResponse{Article: pa}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.UnfavoriteArticleRequest",
          "Handler",
          "pb.ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "uint",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UpdateArticle": {
        "code": "func (h *Handler) UpdateArticle(ctx context.Context, req *pb.UpdateArticleRequest) (*pb.ArticleResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"update article\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tmsg := \"unauthenticated\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := \"not user found\"\n\t\terr = fmt.Errorf(\"token is valid but the user not found: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tslug := req.GetArticle().GetSlug()\n\tarticleID, err := strconv.Atoi(slug)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", slug)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tif article.Author.ID != currentUser.ID {\n\t\tmsg := fmt.Sprintf(\"user(id=%d) attempted to update other user's article(id=%d)\",\n\t\t\tcurrentUser.ID, article.ID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"forbidden\")\n\t}\n\n\tarticle.Overwrite(\n\t\treq.GetArticle().GetTitle(),\n\t\treq.GetArticle().GetDescription(),\n\t\treq.GetArticle().GetBody(),\n\t)\n\n\terr = article.Validate()\n\tif err != nil {\n\t\terr = fmt.Errorf(\"validation error: %w\", err)\n\t\th.logger.Error().Err(err).Msg(\"validation error\")\n\t\treturn nil, status.Error(codes.InvalidArgument, err.Error())\n\t}\n\n\tif err := h.as.Update(article); err != nil {\n\t\th.logger.Error().Err(err).Msg(\"failed to update article\")\n\t\treturn nil, status.Error(codes.InvalidArgument, \"internal server error\")\n\t}\n\n\tfavorited := true\n\tpa := article.ProtoArticle(favorited)\n\n\tfollowing, err := h.us.IsFollowing(currentUser, &article.Author)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\tpa.Author = article.Author.ProtoProfile(following)\n\n\treturn &pb.ArticleResponse{Article: pa}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.UpdateArticleRequest",
          "Handler",
          "pb.ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "UpdateArticleRequest_Article",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "uint",
          "status.Error",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Article": "",
      "CreateAritcleRequest_Article": "",
      "Handler": "type Handler struct {\n\tlogger\t*zerolog.Logger\n\tus\t*store.UserStore\n\tas\t*store.ArticleStore\n}",
      "UpdateArticleRequest_Article": "",
      "context.Context": "",
      "error": "",
      "int32": "",
      "int64": "",
      "pb.ArticleResponse": "type ArticleResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tArticle\t\t*Article\t`protobuf:\"bytes,1,opt,name=article,proto3\" json:\"article,omitempty\"`\n}",
      "pb.ArticlesResponse": "type ArticlesResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tArticles\t[]*Article\t`protobuf:\"bytes,1,rep,name=articles,proto3\" json:\"articles,omitempty\"`\n\tArticlesCount\tint32\t\t`protobuf:\"varint,2,opt,name=articlesCount,proto3\" json:\"articlesCount,omitempty\"`\n}",
      "pb.CreateAritcleRequest": "type CreateAritcleRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tArticle\t\t*CreateAritcleRequest_Article\t`protobuf:\"bytes,1,opt,name=article,proto3\" json:\"article,omitempty\"`\n}",
      "pb.DeleteArticleRequest": "type DeleteArticleRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "pb.Empty": "type Empty struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n}",
      "pb.FavoriteArticleRequest": "type FavoriteArticleRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "pb.GetArticleRequest": "type GetArticleRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "pb.GetArticlesRequest": "type GetArticlesRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tTag\t\tstring\t`protobuf:\"bytes,1,opt,name=tag,proto3\" json:\"tag,omitempty\"`\n\tAuthor\t\tstring\t`protobuf:\"bytes,2,opt,name=author,proto3\" json:\"author,omitempty\"`\n\tFavorited\tstring\t`protobuf:\"bytes,3,opt,name=favorited,proto3\" json:\"favorited,omitempty\"`\n\tLimit\t\tint64\t`protobuf:\"varint,4,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tOffset\t\tint64\t`protobuf:\"varint,5,opt,name=offset,proto3\" json:\"offset,omitempty\"`\n}",
      "pb.GetFeedArticlesRequest": "type GetFeedArticlesRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tLimit\t\tint64\t`protobuf:\"varint,1,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tOffset\t\tint64\t`protobuf:\"varint,2,opt,name=offset,proto3\" json:\"offset,omitempty\"`\n}",
      "pb.UnfavoriteArticleRequest": "type UnfavoriteArticleRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "pb.UpdateArticleRequest": "type UpdateArticleRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tArticle\t\t*UpdateArticleRequest_Article\t`protobuf:\"bytes,1,opt,name=article,proto3\" json:\"article,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "store.ArticleStore": "",
      "store.UserStore": "",
      "string": "",
      "zerolog.Logger": ""
    },
    "package_dict": {
      "auth": "github.com/raahii/golang-grpc-realworld-example/auth",
      "codes": "google.golang.org/grpc/codes",
      "model": "github.com/raahii/golang-grpc-realworld-example/model",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "handler",
    "imports": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"strconv\"\n\t\"github.com/raahii/golang-grpc-realworld-example/auth\"\n\t\"github.com/raahii/golang-grpc-realworld-example/model\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/comment.go": {
    "function_dict": {
      "CreateComment": {
        "code": "func (h *Handler) CreateComment(ctx context.Context, req *pb.CreateCommentRequest) (*pb.CommentResponse, error) {\n\th.logger.Info().Msgf(\"Create comment | req: %+v\", req)\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\tarticleID, err := strconv.Atoi(req.GetSlug())\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", req.GetSlug())\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tcomment := model.Comment{\n\t\tBody:      req.GetComment().GetBody(),\n\t\tAuthor:    *currentUser,\n\t\tArticleID: article.ID,\n\t}\n\n\terr = comment.Validate()\n\tif err != nil {\n\t\terr = fmt.Errorf(\"validation error: %w\", err)\n\t\th.logger.Error().Err(err).Msg(\"validation error\")\n\t\treturn nil, status.Error(codes.InvalidArgument, err.Error())\n\t}\n\n\terr = h.as.CreateComment(&comment)\n\tif err != nil {\n\t\tmsg := \"failed to create comment.\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, msg)\n\t}\n\n\tpc := comment.ProtoComment()\n\tpc.Author = currentUser.ProtoProfile(false)\n\n\treturn &pb.CommentResponse{Comment: pc}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.CreateCommentRequest",
          "Handler",
          "pb.CommentResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "CreateCommentRequest_Comment",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Comment"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "uint",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DeleteComment": {
        "code": "func (h *Handler) DeleteComment(ctx context.Context, req *pb.DeleteCommentRequest) (*pb.Empty, error) {\n\th.logger.Info().Msgf(\"Delete comment | req: %+v\", req)\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\tcommentID, err := strconv.Atoi(req.GetId())\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert id (%s) into integer\", req.GetId())\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tcomment, err := h.as.GetCommentByID(uint(commentID))\n\tif err != nil {\n\t\tmsg := \"failed to get comment\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\tif req.GetSlug() != fmt.Sprintf(\"%d\", comment.ArticleID) {\n\t\tmsg := \"the comment is not in the article\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\tif comment.UserID != currentUser.ID {\n\t\tmsg := \"forbidden\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\terr = h.as.DeleteComment(comment)\n\tif err != nil {\n\t\tmsg := \"failed to delete comment\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\treturn &pb.Empty{}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.DeleteCommentRequest",
          "Handler",
          "pb.Empty",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "uint",
          "status.Error",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetComments": {
        "code": "func (h *Handler) GetComments(ctx context.Context, req *pb.GetCommentsRequest) (*pb.CommentsResponse, error) {\n\th.logger.Info().Msgf(\"Get comments | req: %+v\", req)\n\n\tarticleID, err := strconv.Atoi(req.GetSlug())\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"cannot convert slug (%s) into integer\", req.GetSlug())\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tarticle, err := h.as.GetByID(uint(articleID))\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"requested article (slug=%d) not found\", articleID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid article id\")\n\t}\n\n\tcomments, err := h.as.GetComments(article)\n\tif err != nil {\n\t\tmsg := \"failed to get comments\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, msg)\n\t}\n\n\tvar currentUser *model.User\n\tuserID, err := auth.GetUserID(ctx)\n\tif err == nil {\n\t\tcurrentUser, err = h.us.GetByID(userID)\n\t\tif err != nil {\n\t\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t\t}\n\t}\n\n\tpcs := make([]*pb.Comment, 0, len(comments))\n\tfor _, c := range comments {\n\t\tpc := c.ProtoComment()\n\n\t\tfollowing, err := h.us.IsFollowing(currentUser, &c.Author)\n\t\tif err != nil {\n\t\t\tmsg := \"failed to get following status\"\n\t\t\th.logger.Error().Err(err).Msg(msg)\n\t\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t\t}\n\t\tpc.Author = c.Author.ProtoProfile(following)\n\n\t\tpcs = append(pcs, pc)\n\t}\n\n\treturn &pb.CommentsResponse{Comments: pcs}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.GetCommentsRequest",
          "Handler",
          "pb.CommentsResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Comment"
        ],
        "associated_func": [
          "status.Error",
          "uint",
          "status.Error",
          "status.Error",
          "auth.GetUserID",
          "status.Error",
          "make",
          "len",
          "status.Error",
          "append"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Comment": "",
      "CreateCommentRequest_Comment": "",
      "Handler": "type Handler struct {\n\tlogger\t*zerolog.Logger\n\tus\t*store.UserStore\n\tas\t*store.ArticleStore\n}",
      "context.Context": "",
      "error": "",
      "pb.CommentResponse": "type CommentResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tComment\t\t*Comment\t`protobuf:\"bytes,1,opt,name=comment,proto3\" json:\"comment,omitempty\"`\n}",
      "pb.CommentsResponse": "type CommentsResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tComments\t[]*Comment\t`protobuf:\"bytes,1,rep,name=comments,proto3\" json:\"comments,omitempty\"`\n}",
      "pb.CreateCommentRequest": "type CreateCommentRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t\t\t\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n\tComment\t\t*CreateCommentRequest_Comment\t`protobuf:\"bytes,2,opt,name=comment,proto3\" json:\"comment,omitempty\"`\n}",
      "pb.DeleteCommentRequest": "type DeleteCommentRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n\tId\t\tstring\t`protobuf:\"bytes,2,opt,name=id,proto3\" json:\"id,omitempty\"`\n}",
      "pb.Empty": "type Empty struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n}",
      "pb.GetCommentsRequest": "type GetCommentsRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "store.ArticleStore": "",
      "store.UserStore": "",
      "string": "",
      "zerolog.Logger": ""
    },
    "package_dict": {
      "auth": "github.com/raahii/golang-grpc-realworld-example/auth",
      "codes": "google.golang.org/grpc/codes",
      "model": "github.com/raahii/golang-grpc-realworld-example/model",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "handler",
    "imports": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"strconv\"\n\t\"github.com/raahii/golang-grpc-realworld-example/auth\"\n\t\"github.com/raahii/golang-grpc-realworld-example/model\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go": {
    "function_dict": {
      "New": {
        "code": "func New(l *zerolog.Logger, us *store.UserStore, as *store.ArticleStore) *Handler {\n\treturn &Handler{logger: l, us: us, as: as}\n}",
        "is_file_function": true,
        "associated_struct": [
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "Handler",
          "LevelWriter",
          "Level",
          "Sampler",
          "byte",
          "Hook",
          "gorm.DB",
          "gorm.DB",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/rs/zerolog@v1.18.0/log.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go"
        ],
        "test_exists": true,
        "test_functions": {
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler_test.go": {
            "setUp": {
              "code": "func setUp(t *testing.T) (*Handler, func(t *testing.T)) {\n\tw := zerolog.ConsoleWriter{Out: ioutil.Discard}\n\n\tl := zerolog.New(w).With().Timestamp().Logger()\n\n\td, err := db.NewTestDB()\n\tif err != nil {\n\t\tt.Fatal(fmt.Errorf(\"failed to initialize database: %w\", err))\n\t}\n\n\tus := store.NewUserStore(d)\n\tas := store.NewArticleStore(d)\n\n\treturn New(&l, us, as), func(t *testing.T) {\n\t\terr := db.DropTestDB(d)\n\t\tif err != nil {\n\t\t\tt.Fatal(fmt.Errorf(\"failed to clean database: %w\", err))\n\t\t}\n\t}\n}",
              "is_file_function": false,
              "associated_struct": null,
              "associated_func": [
                "zerolog.New",
                "db.NewTestDB",
                "t.Fatal",
                "fmt.Errorf",
                "store.NewUserStore",
                "store.NewArticleStore",
                "New",
                "db.DropTestDB",
                "t.Fatal",
                "fmt.Errorf"
              ],
              "dependent_files": null,
              "test_exists": false,
              "test_functions": null,
              "requires_test": false,
              "access_modifier": ""
            }
          }
        },
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Handler": "type Handler struct {\n\tlogger *zerolog.Logger\n\tus     *store.UserStore\n\tas     *store.ArticleStore\n}",
      "Hook": "",
      "Level": "",
      "LevelWriter": "",
      "Sampler": "",
      "byte": "",
      "gorm.DB": "",
      "store.ArticleStore": "type ArticleStore struct{ db *gorm.DB }",
      "store.UserStore": "type UserStore struct{ db *gorm.DB }",
      "zerolog.Logger": "type Logger struct {\n\tw\tLevelWriter\n\tlevel\tLevel\n\tsampler\tSampler\n\tcontext\t[]byte\n\thooks\t[]Hook\n}"
    },
    "package_dict": {
      "store": "github.com/raahii/golang-grpc-realworld-example/store",
      "zerolog": "github.com/rs/zerolog"
    },
    "package_name": "handler",
    "imports": "import (\n\t\"github.com/raahii/golang-grpc-realworld-example/store\"\n\t\"github.com/rs/zerolog\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/profile.go": {
    "function_dict": {
      "FollowUser": {
        "code": "func (h *Handler) FollowUser(ctx context.Context, req *pb.FollowRequest) (*pb.ProfileResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"follow user\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\terr = fmt.Errorf(\"unauthenticated: %w\", err)\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\tif currentUser.Username == req.GetUsername() {\n\t\th.logger.Error().Msg(\"cannot follow yourself\")\n\t\treturn nil, status.Error(codes.InvalidArgument, \"cannot follow yourself\")\n\t}\n\n\trequestUser, err := h.us.GetByUsername(req.GetUsername())\n\tif err != nil {\n\t\th.logger.Error().Err(fmt.Errorf(\"user not found: %w\", err))\n\t\treturn nil, status.Error(codes.NotFound, \"user was not found\")\n\t}\n\n\terr = h.us.Follow(currentUser, requestUser)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"failed to follow user: (ID: %d) -> (ID: %d)\",\n\t\t\tcurrentUser.ID, requestUser.ID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, \"failed to follow user\")\n\t}\n\n\treturn &pb.ProfileResponse{Profile: requestUser.ProtoProfile(true)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.FollowRequest",
          "Handler",
          "pb.ProfileResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "ShowProfile": {
        "code": "func (h *Handler) ShowProfile(ctx context.Context, req *pb.ShowProfileRequest) (*pb.ProfileResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"show profile\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\trequestUser, err := h.us.GetByUsername(req.GetUsername())\n\tif err != nil {\n\t\tmsg := \"user was not found\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tfollowing, err := h.us.IsFollowing(currentUser, requestUser)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\n\treturn &pb.ProfileResponse{Profile: requestUser.ProtoProfile(following)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.ShowProfileRequest",
          "Handler",
          "pb.ProfileResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UnfollowUser": {
        "code": "func (h *Handler) UnfollowUser(ctx context.Context, req *pb.UnfollowRequest) (*pb.ProfileResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"unfollow user\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\terr = fmt.Errorf(\"unauthenticated: %w\", err)\n\t\th.logger.Error().Err(err).Msg(\"unauthenticated\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"unauthenticated\")\n\t}\n\n\tcurrentUser, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"current user not found\")\n\t\treturn nil, status.Error(codes.NotFound, \"user not found\")\n\t}\n\n\tif currentUser.Username == req.GetUsername() {\n\t\th.logger.Error().Msg(\"cannot follow yourself\")\n\t\treturn nil, status.Error(codes.InvalidArgument, \"cannot follow yourself\")\n\t}\n\n\trequestUser, err := h.us.GetByUsername(req.GetUsername())\n\tif err != nil {\n\t\tmsg := \"user was not found\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tfollowing, err := h.us.IsFollowing(currentUser, requestUser)\n\tif err != nil {\n\t\tmsg := \"failed to get following status\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, \"internal server error\")\n\t}\n\n\tif !following {\n\t\th.logger.Error().Err(err).Msg(\"current user is not following request user\")\n\t\treturn nil, status.Errorf(codes.Unauthenticated, \"you are not following the user\")\n\t}\n\n\terr = h.us.Unfollow(currentUser, requestUser)\n\tif err != nil {\n\t\tmsg := fmt.Sprintf(\"failed to unfollow user: (ID: %d) -> (ID: %d)\",\n\t\t\tcurrentUser.ID, requestUser.ID)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, \"failed to unfollow user\")\n\t}\n\n\treturn &pb.ProfileResponse{Profile: requestUser.ProtoProfile(false)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.UnfollowRequest",
          "Handler",
          "pb.ProfileResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "status.Error",
          "status.Error",
          "status.Errorf",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Handler": "type Handler struct {\n\tlogger\t*zerolog.Logger\n\tus\t*store.UserStore\n\tas\t*store.ArticleStore\n}",
      "Profile": "",
      "context.Context": "",
      "error": "",
      "pb.FollowRequest": "type FollowRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUsername\tstring\t`protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n}",
      "pb.ProfileResponse": "type ProfileResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tProfile\t\t*Profile\t`protobuf:\"bytes,1,opt,name=profile,proto3\" json:\"profile,omitempty\"`\n}",
      "pb.ShowProfileRequest": "type ShowProfileRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUsername\tstring\t`protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n}",
      "pb.UnfollowRequest": "type UnfollowRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUsername\tstring\t`protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "store.ArticleStore": "",
      "store.UserStore": "",
      "string": "",
      "zerolog.Logger": ""
    },
    "package_dict": {
      "auth": "github.com/raahii/golang-grpc-realworld-example/auth",
      "codes": "google.golang.org/grpc/codes",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "handler",
    "imports": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/raahii/golang-grpc-realworld-example/auth\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/tag.go": {
    "function_dict": {
      "GetTags": {
        "code": "func (h *Handler) GetTags(ctx context.Context, req *pb.Empty) (*pb.TagsResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"get tags\")\n\n\ttags, err := h.as.GetTags()\n\tif err != nil {\n\t\th.logger.Error().Err(err).Msg(\"faield to get tags\")\n\t\treturn nil, status.Error(codes.Aborted, \"internal server error\")\n\t}\n\n\ttagNames := make([]string, 0, len(tags))\n\tfor _, t := range tags {\n\t\ttagNames = append(tagNames, t.Name)\n\t}\n\n\treturn &pb.TagsResponse{Tags: tagNames}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.Empty",
          "Handler",
          "pb.TagsResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": [
          "status.Error",
          "make",
          "len",
          "append"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Handler": "type Handler struct {\n\tlogger\t*zerolog.Logger\n\tus\t*store.UserStore\n\tas\t*store.ArticleStore\n}",
      "context.Context": "",
      "error": "",
      "pb.Empty": "type Empty struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n}",
      "pb.TagsResponse": "type TagsResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tTags\t\t[]string\t`protobuf:\"bytes,1,rep,name=tags,proto3\" json:\"tags,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "store.ArticleStore": "",
      "store.UserStore": "",
      "string": "",
      "zerolog.Logger": ""
    },
    "package_dict": {
      "codes": "google.golang.org/grpc/codes",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "handler",
    "imports": "import (\n\t\"context\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/user.go": {
    "function_dict": {
      "CreateUser": {
        "code": "func (h *Handler) CreateUser(ctx context.Context, req *pb.CreateUserRequest) (*pb.UserResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"create user\")\n\n\tu := model.User{\n\t\tUsername: req.User.GetUsername(),\n\t\tEmail:    req.User.GetEmail(),\n\t\tPassword: req.User.GetPassword(),\n\t}\n\n\terr := u.Validate()\n\tif err != nil {\n\t\tmsg := \"validation error\"\n\t\terr = fmt.Errorf(\"validation error: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\terr = u.HashPassword()\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr := fmt.Errorf(\"Failed to hash password, %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, err.Error())\n\t}\n\n\terr = h.us.Create(&u)\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr := fmt.Errorf(\"Failed to create user. %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Canceled, msg)\n\t}\n\n\ttoken, err := auth.GenerateToken(u.ID)\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr := fmt.Errorf(\"Failed to create token. %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, msg)\n\t}\n\n\treturn &pb.UserResponse{User: u.ProtoUser(token)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.CreateUserRequest",
          "Handler",
          "pb.UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "CreateUserRequest_User",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "status.Error",
          "status.Error",
          "status.Error",
          "auth.GenerateToken",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "CurrentUser": {
        "code": "func (h *Handler) CurrentUser(ctx context.Context, req *pb.Empty) (*pb.UserResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"get current user\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tmsg := \"unauthenticated\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\tu, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := \"user not found\"\n\t\terr = fmt.Errorf(\"token is valid but the user not found: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\ttoken, err := auth.GenerateToken(u.ID)\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr := fmt.Errorf(\"Failed to create token. %w\", err)\n\t\th.logger.Error().Err(err)\n\t\treturn nil, status.Error(codes.Aborted, msg)\n\t}\n\n\treturn &pb.UserResponse{User: u.ProtoUser(token)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.Empty",
          "Handler",
          "pb.UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "auth.GenerateToken",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "LoginUser": {
        "code": "func (h *Handler) LoginUser(ctx context.Context, req *pb.LoginUserRequest) (*pb.UserResponse, error) {\n\th.logger.Info().Interface(\"req\", req).Msg(\"login user\")\n\n\tu, err := h.us.GetByEmail(req.GetUser().GetEmail())\n\tif err != nil {\n\t\tmsg := \"invalid email or password\"\n\t\terr = fmt.Errorf(\"failed to login due to wrong email: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\tif !u.CheckPassword(req.GetUser().GetPassword()) {\n\t\th.logger.Error().Msgf(\"failed to login due to receive wrong password: %s\", u.Email)\n\t\treturn nil, status.Error(codes.InvalidArgument, \"invalid email or password\")\n\t}\n\n\ttoken, err := auth.GenerateToken(u.ID)\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr := fmt.Errorf(\"Failed to create token. %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, msg)\n\t}\n\n\treturn &pb.UserResponse{User: u.ProtoUser(token)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.LoginUserRequest",
          "Handler",
          "pb.UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "LoginUserRequest_User",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "status.Error",
          "status.Error",
          "auth.GenerateToken",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UpdateUser": {
        "code": "func (h *Handler) UpdateUser(ctx context.Context, req *pb.UpdateUserRequest) (*pb.UserResponse, error) {\n\th.logger.Info().Msg(\"update user request\")\n\n\tuserID, err := auth.GetUserID(ctx)\n\tif err != nil {\n\t\tmsg := \"unauthenticated\"\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Errorf(codes.Unauthenticated, msg)\n\t}\n\n\tu, err := h.us.GetByID(userID)\n\tif err != nil {\n\t\tmsg := \"not user found\"\n\t\terr = fmt.Errorf(\"token is valid but the user not found: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.NotFound, msg)\n\t}\n\n\tusername := req.GetUser().GetUsername()\n\tif username != \"\" {\n\t\tu.Username = username\n\t}\n\n\temail := req.GetUser().GetEmail()\n\tif email != \"\" {\n\t\tu.Email = email\n\t}\n\n\tpassword := req.GetUser().GetPassword()\n\tif password != \"\" {\n\t\tu.Password = password\n\t}\n\n\timage := req.GetUser().GetImage()\n\tif image != \"\" {\n\t\tu.Image = image\n\t}\n\n\tbio := req.GetUser().GetBio()\n\tif bio != \"\" {\n\t\tu.Bio = bio\n\t}\n\n\terr = u.Validate()\n\tif err != nil {\n\t\terr = fmt.Errorf(\"validation error: %w\", err)\n\t\th.logger.Error().Err(err).Msg(\"validation error\")\n\t\treturn nil, status.Error(codes.InvalidArgument, err.Error())\n\t}\n\n\tif req.GetUser().GetPassword() != \"\" {\n\t\terr = u.HashPassword()\n\t\tif err != nil {\n\t\t\tmsg := \"internal server error\"\n\t\t\terr := fmt.Errorf(\"Failed to hash password, %w\", err)\n\t\t\th.logger.Error().Err(err).Msg(msg)\n\t\t\treturn nil, status.Error(codes.Aborted, msg)\n\t\t}\n\t}\n\n\terr = h.us.Update(u)\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr = fmt.Errorf(\"failed to update user: %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.InvalidArgument, msg)\n\t}\n\n\ttoken, err := auth.GenerateToken(u.ID)\n\tif err != nil {\n\t\tmsg := \"internal server error\"\n\t\terr := fmt.Errorf(\"Failed to create token. %w\", err)\n\t\th.logger.Error().Err(err).Msg(msg)\n\t\treturn nil, status.Error(codes.Aborted, msg)\n\t}\n\n\treturn &pb.UserResponse{User: u.ProtoUser(token)}, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "pb.UpdateUserRequest",
          "Handler",
          "pb.UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "UpdateUserRequest_User",
          "zerolog.Logger",
          "store.UserStore",
          "store.ArticleStore",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "auth.GetUserID",
          "status.Errorf",
          "status.Error",
          "status.Error",
          "status.Error",
          "status.Error",
          "auth.GenerateToken",
          "status.Error"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/auth/auth.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "CreateUserRequest_User": "",
      "Handler": "type Handler struct {\n\tlogger\t*zerolog.Logger\n\tus\t*store.UserStore\n\tas\t*store.ArticleStore\n}",
      "LoginUserRequest_User": "",
      "UpdateUserRequest_User": "",
      "User": "",
      "context.Context": "",
      "error": "",
      "pb.CreateUserRequest": "type CreateUserRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUser\t\t*CreateUserRequest_User\t`protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "pb.Empty": "type Empty struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n}",
      "pb.LoginUserRequest": "type LoginUserRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUser\t\t*LoginUserRequest_User\t`protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "pb.UpdateUserRequest": "type UpdateUserRequest struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUser\t\t*UpdateUserRequest_User\t`protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "pb.UserResponse": "type UserResponse struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUser\t\t*User\t`protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "store.ArticleStore": "",
      "store.UserStore": "",
      "zerolog.Logger": ""
    },
    "package_dict": {
      "auth": "github.com/raahii/golang-grpc-realworld-example/auth",
      "codes": "google.golang.org/grpc/codes",
      "model": "github.com/raahii/golang-grpc-realworld-example/model",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "handler",
    "imports": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/raahii/golang-grpc-realworld-example/auth\"\n\t\"github.com/raahii/golang-grpc-realworld-example/model\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go": {
    "function_dict": {
      "Overwrite": {
        "code": "func (a *Article) Overwrite(title, description, body string) {\n\tif title != \"\" {\n\t\ta.Title = title\n\t}\n\n\tif description != \"\" {\n\t\ta.Description = description\n\t}\n\n\tif body != \"\" {\n\t\ta.Body = body\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "Article",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "ProtoArticle": {
        "code": "func (a *Article) ProtoArticle(favorited bool) *pb.Article {\n\tpa := pb.Article{\n\t\tSlug:           fmt.Sprintf(\"%d\", a.ID),\n\t\tTitle:          a.Title,\n\t\tDescription:    a.Description,\n\t\tBody:           a.Body,\n\t\tFavoritesCount: a.FavoritesCount,\n\t\tFavorited:      favorited,\n\t\tCreatedAt:      a.CreatedAt.Format(ISO8601),\n\t\tUpdatedAt:      a.UpdatedAt.Format(ISO8601),\n\t}\n\n\ttags := make([]string, 0, len(a.Tags))\n\tfor _, t := range a.Tags {\n\t\ttags = append(tags, t.Name)\n\t}\n\tpa.TagList = tags\n\n\treturn &pa\n}",
        "is_file_function": true,
        "associated_struct": [
          "bool",
          "Article",
          "pb.Article",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string",
          "string",
          "string",
          "bool",
          "int32",
          "Profile"
        ],
        "associated_func": [
          "make",
          "len",
          "append"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Validate": {
        "code": "func (a Article) Validate() error {\n\treturn validation.ValidateStruct(&a,\n\t\tvalidation.Field(\n\t\t\t&a.Title,\n\t\t\tvalidation.Required,\n\t\t),\n\t\tvalidation.Field(\n\t\t\t&a.Body,\n\t\t\tvalidation.Required,\n\t\t),\n\t\tvalidation.Field(\n\t\t\t&a.Tags,\n\t\t\tvalidation.Required,\n\t\t),\n\t)\n}",
        "is_file_function": true,
        "associated_struct": [
          "Article",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment"
        ],
        "associated_func": [
          "validation.ValidateStruct",
          "validation.Field",
          "validation.Field",
          "validation.Field"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/model.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Article": "type Article struct {\n\tgorm.Model\n\tTitle          string `gorm:\"not null\"`\n\tDescription    string `gorm:\"not null\"`\n\tBody           string `gorm:\"not null\"`\n\tTags           []Tag  `gorm:\"many2many:article_tags\"`\n\tAuthor         User   `gorm:\"foreignkey:UserID\"`\n\tUserID         uint   `gorm:\"not null\"`\n\tFavoritesCount int32  `gorm:\"not null;default=0\"`\n\tFavoritedUsers []User `gorm:\"many2many:favorite_articles\"`\n\tComments       []Comment\n}",
      "Comment": "type Comment struct {\n\tgorm.Model\n\tBody\t\tstring\t`gorm:\"not null\"`\n\tUserID\t\tuint\t`gorm:\"not null\"`\n\tAuthor\t\tUser\t`gorm:\"foreignkey:UserID\"`\n\tArticleID\tuint\t`gorm:\"not null\"`\n\tArticle\t\tArticle\n}",
      "Profile": "",
      "Tag": "type Tag struct {\n\tgorm.Model\n\tName string `gorm:\"not null\"`\n}",
      "User": "type User struct {\n\tgorm.Model\n\tUsername\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tEmail\t\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tPassword\t\tstring\t\t`gorm:\"not null\"`\n\tBio\t\t\tstring\t\t`gorm:\"not null\"`\n\tImage\t\t\tstring\t\t`gorm:\"not null\"`\n\tFollows\t\t\t[]User\t\t`gorm:\"many2many:follows;jointable_foreignkey:from_user_id;association_jointable_foreignkey:to_user_id\"`\n\tFavoriteArticles\t[]Article\t`gorm:\"many2many:favorite_articles;\"`\n}",
      "bool": "",
      "error": "",
      "gorm.Model": "type Model struct {\n\tID\t\tuint\t`gorm:\"primary_key\"`\n\tCreatedAt\ttime.Time\n\tUpdatedAt\ttime.Time\n\tDeletedAt\t*time.Time\t`sql:\"index\"`\n}",
      "int32": "",
      "pb.Article": "type Article struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tSlug\t\tstring\t\t`protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n\tTitle\t\tstring\t\t`protobuf:\"bytes,2,opt,name=title,proto3\" json:\"title,omitempty\"`\n\tDescription\tstring\t\t`protobuf:\"bytes,3,opt,name=description,proto3\" json:\"description,omitempty\"`\n\tBody\t\tstring\t\t`protobuf:\"bytes,4,opt,name=body,proto3\" json:\"body,omitempty\"`\n\tTagList\t\t[]string\t`protobuf:\"bytes,5,rep,name=tagList,proto3\" json:\"tagList,omitempty\"`\n\tCreatedAt\tstring\t\t`protobuf:\"bytes,6,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt\tstring\t\t`protobuf:\"bytes,7,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tFavorited\tbool\t\t`protobuf:\"varint,8,opt,name=favorited,proto3\" json:\"favorited,omitempty\"`\n\tFavoritesCount\tint32\t\t`protobuf:\"varint,9,opt,name=favoritesCount,proto3\" json:\"favoritesCount,omitempty\"`\n\tAuthor\t\t*Profile\t`protobuf:\"bytes,10,opt,name=author,proto3\" json:\"author,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "string": "",
      "uint": ""
    },
    "package_dict": {
      "gorm": "github.com/jinzhu/gorm",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "validation": "github.com/go-ozzo/ozzo-validation"
    },
    "package_name": "model",
    "imports": "import (\n\t\"fmt\"\n\tvalidation \"github.com/go-ozzo/ozzo-validation\"\n\t\"github.com/jinzhu/gorm\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go": {
    "function_dict": {
      "ProtoComment": {
        "code": "func (c *Comment) ProtoComment() *pb.Comment {\n\treturn &pb.Comment{\n\t\tId:        fmt.Sprintf(\"%d\", c.ID),\n\t\tBody:      c.Body,\n\t\tCreatedAt: c.CreatedAt.Format(ISO8601),\n\t\tUpdatedAt: c.UpdatedAt.Format(ISO8601),\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "Comment",
          "pb.Comment",
          "gorm.Model",
          "string",
          "uint",
          "User",
          "uint",
          "Article",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "Profile"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Validate": {
        "code": "func (c Comment) Validate() error {\n\treturn validation.ValidateStruct(&c,\n\t\tvalidation.Field(\n\t\t\t&c.Body,\n\t\t\tvalidation.Required,\n\t\t),\n\t)\n}",
        "is_file_function": true,
        "associated_struct": [
          "Comment",
          "error",
          "gorm.Model",
          "string",
          "uint",
          "User",
          "uint",
          "Article"
        ],
        "associated_func": [
          "validation.ValidateStruct",
          "validation.Field"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/model.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Article": "type Article struct {\n\tgorm.Model\n\tTitle\t\tstring\t`gorm:\"not null\"`\n\tDescription\tstring\t`gorm:\"not null\"`\n\tBody\t\tstring\t`gorm:\"not null\"`\n\tTags\t\t[]Tag\t`gorm:\"many2many:article_tags\"`\n\tAuthor\t\tUser\t`gorm:\"foreignkey:UserID\"`\n\tUserID\t\tuint\t`gorm:\"not null\"`\n\tFavoritesCount\tint32\t`gorm:\"not null;default=0\"`\n\tFavoritedUsers\t[]User\t`gorm:\"many2many:favorite_articles\"`\n\tComments\t[]Comment\n}",
      "Comment": "type Comment struct {\n\tgorm.Model\n\tBody      string `gorm:\"not null\"`\n\tUserID    uint   `gorm:\"not null\"`\n\tAuthor    User   `gorm:\"foreignkey:UserID\"`\n\tArticleID uint   `gorm:\"not null\"`\n\tArticle   Article\n}",
      "Profile": "",
      "User": "type User struct {\n\tgorm.Model\n\tUsername\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tEmail\t\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tPassword\t\tstring\t\t`gorm:\"not null\"`\n\tBio\t\t\tstring\t\t`gorm:\"not null\"`\n\tImage\t\t\tstring\t\t`gorm:\"not null\"`\n\tFollows\t\t\t[]User\t\t`gorm:\"many2many:follows;jointable_foreignkey:from_user_id;association_jointable_foreignkey:to_user_id\"`\n\tFavoriteArticles\t[]Article\t`gorm:\"many2many:favorite_articles;\"`\n}",
      "error": "",
      "gorm.Model": "type Model struct {\n\tID\t\tuint\t`gorm:\"primary_key\"`\n\tCreatedAt\ttime.Time\n\tUpdatedAt\ttime.Time\n\tDeletedAt\t*time.Time\t`sql:\"index\"`\n}",
      "pb.Comment": "type Comment struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tId\t\tstring\t\t`protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tCreatedAt\tstring\t\t`protobuf:\"bytes,2,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt\tstring\t\t`protobuf:\"bytes,3,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tBody\t\tstring\t\t`protobuf:\"bytes,4,opt,name=body,proto3\" json:\"body,omitempty\"`\n\tAuthor\t\t*Profile\t`protobuf:\"bytes,5,opt,name=author,proto3\" json:\"author,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "string": "",
      "uint": ""
    },
    "package_dict": {
      "gorm": "github.com/jinzhu/gorm",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "validation": "github.com/go-ozzo/ozzo-validation"
    },
    "package_name": "model",
    "imports": "import (\n\t\"fmt\"\n\tvalidation \"github.com/go-ozzo/ozzo-validation\"\n\t\"github.com/jinzhu/gorm\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go": {
    "function_dict": {
      "CheckPassword": {
        "code": "func (u *User) CheckPassword(plain string) bool {\n\terr := bcrypt.CompareHashAndPassword([]byte(u.Password), []byte(plain))\n\treturn err == nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "User",
          "bool",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article"
        ],
        "associated_func": [
          "bcrypt.CompareHashAndPassword"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/go/pkg/mod/golang.org/x/crypto@v0.0.0-20191205180655-e7c4368fe9dd/bcrypt/bcrypt.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "HashPassword": {
        "code": "func (u *User) HashPassword() error {\n\tif len(u.Password) == 0 {\n\t\treturn errors.New(\"password should not be empty\")\n\t}\n\n\th, err := bcrypt.GenerateFromPassword([]byte(u.Password), bcrypt.DefaultCost)\n\tif err != nil {\n\t\treturn err\n\t}\n\tu.Password = string(h)\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "User",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article"
        ],
        "associated_func": [
          "len",
          "bcrypt.GenerateFromPassword",
          "string"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/go/pkg/mod/golang.org/x/crypto@v0.0.0-20191205180655-e7c4368fe9dd/bcrypt/bcrypt.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "ProtoProfile": {
        "code": "func (u *User) ProtoProfile(following bool) *pb.Profile {\n\treturn &pb.Profile{\n\t\tUsername:  u.Username,\n\t\tBio:       u.Bio,\n\t\tImage:     u.Image,\n\t\tFollowing: following,\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "bool",
          "User",
          "pb.Profile",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "bool"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "ProtoUser": {
        "code": "func (u *User) ProtoUser(token string) *pb.User {\n\treturn &pb.User{\n\t\tEmail:    u.Email,\n\t\tToken:    token,\n\t\tUsername: u.Username,\n\t\tBio:      u.Bio,\n\t\tImage:    u.Image,\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "User",
          "pb.User",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Validate": {
        "code": "func (u User) Validate() error {\n\treturn validation.ValidateStruct(&u,\n\t\tvalidation.Field(\n\t\t\t&u.Username,\n\t\t\tvalidation.Required,\n\t\t\tvalidation.Match(regexp.MustCompile(\"[a-zA-Z0-9]+\")),\n\t\t),\n\t\tvalidation.Field(\n\t\t\t&u.Email,\n\t\t\tvalidation.Required,\n\t\t\tis.Email,\n\t\t),\n\t\tvalidation.Field(\n\t\t\t&u.Password,\n\t\t\tvalidation.Required,\n\t\t),\n\t)\n}",
        "is_file_function": true,
        "associated_struct": [
          "User",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article"
        ],
        "associated_func": [
          "validation.ValidateStruct",
          "validation.Field",
          "validation.Match",
          "validation.Field",
          "validation.Field"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/model.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/match.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go",
          "/go/pkg/mod/github.com/go-ozzo/ozzo-validation@v3.6.0+incompatible/struct.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "Article": "type Article struct {\n\tgorm.Model\n\tTitle\t\tstring\t`gorm:\"not null\"`\n\tDescription\tstring\t`gorm:\"not null\"`\n\tBody\t\tstring\t`gorm:\"not null\"`\n\tTags\t\t[]Tag\t`gorm:\"many2many:article_tags\"`\n\tAuthor\t\tUser\t`gorm:\"foreignkey:UserID\"`\n\tUserID\t\tuint\t`gorm:\"not null\"`\n\tFavoritesCount\tint32\t`gorm:\"not null;default=0\"`\n\tFavoritedUsers\t[]User\t`gorm:\"many2many:favorite_articles\"`\n\tComments\t[]Comment\n}",
      "User": "type User struct {\n\tgorm.Model\n\tUsername         string    `gorm:\"unique_index;not null\"`\n\tEmail            string    `gorm:\"unique_index;not null\"`\n\tPassword         string    `gorm:\"not null\"`\n\tBio              string    `gorm:\"not null\"`\n\tImage            string    `gorm:\"not null\"`\n\tFollows          []User    `gorm:\"many2many:follows;jointable_foreignkey:from_user_id;association_jointable_foreignkey:to_user_id\"`\n\tFavoriteArticles []Article `gorm:\"many2many:favorite_articles;\"`\n}",
      "bool": "",
      "error": "",
      "gorm.Model": "type Model struct {\n\tID\t\tuint\t`gorm:\"primary_key\"`\n\tCreatedAt\ttime.Time\n\tUpdatedAt\ttime.Time\n\tDeletedAt\t*time.Time\t`sql:\"index\"`\n}",
      "pb.Profile": "type Profile struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUsername\tstring\t`protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tBio\t\tstring\t`protobuf:\"bytes,2,opt,name=bio,proto3\" json:\"bio,omitempty\"`\n\tImage\t\tstring\t`protobuf:\"bytes,3,opt,name=image,proto3\" json:\"image,omitempty\"`\n\tFollowing\tbool\t`protobuf:\"varint,4,opt,name=following,proto3\" json:\"following,omitempty\"`\n}",
      "pb.User": "type User struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tEmail\t\tstring\t`protobuf:\"bytes,1,opt,name=email,proto3\" json:\"email,omitempty\"`\n\tToken\t\tstring\t`protobuf:\"bytes,2,opt,name=token,proto3\" json:\"token,omitempty\"`\n\tUsername\tstring\t`protobuf:\"bytes,3,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tBio\t\tstring\t`protobuf:\"bytes,4,opt,name=bio,proto3\" json:\"bio,omitempty\"`\n\tImage\t\tstring\t`protobuf:\"bytes,5,opt,name=image,proto3\" json:\"image,omitempty\"`\n}",
      "protoimpl.MessageState": "",
      "protoimpl.SizeCache": "",
      "protoimpl.UnknownFields": "",
      "string": ""
    },
    "package_dict": {
      "bcrypt": "golang.org/x/crypto/bcrypt",
      "gorm": "github.com/jinzhu/gorm",
      "is": "github.com/go-ozzo/ozzo-validation/is",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "validation": "github.com/go-ozzo/ozzo-validation"
    },
    "package_name": "model",
    "imports": "import (\n\t\"errors\"\n\t\"regexp\"\n\tvalidation \"github.com/go-ozzo/ozzo-validation\"\n\t\"github.com/go-ozzo/ozzo-validation/is\"\n\t\"github.com/jinzhu/gorm\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"golang.org/x/crypto/bcrypt\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go": {
    "function_dict": {
      "CreateArticle": {
        "code": "func (c *articlesClient) CreateArticle(ctx context.Context, in *CreateAritcleRequest, opts ...grpc.CallOption) (*ArticleResponse, error) {\n\tout := new(ArticleResponse)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/CreateArticle\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "CreateAritcleRequest",
          "UnimplementedArticlesServer",
          "ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "CreateAritcleRequest_Article",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "CreateComment": {
        "code": "func (c *articlesClient) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CommentResponse, error) {\n\tout := new(CommentResponse)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/CreateComment\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "CreateCommentRequest",
          "UnimplementedArticlesServer",
          "CommentResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "CreateCommentRequest_Comment",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Comment"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DeleteArticle": {
        "code": "func (c *articlesClient) DeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*Empty, error) {\n\tout := new(Empty)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/DeleteArticle\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "DeleteArticleRequest",
          "UnimplementedArticlesServer",
          "Empty",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DeleteComment": {
        "code": "func (c *articlesClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*Empty, error) {\n\tout := new(Empty)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/DeleteComment\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "DeleteCommentRequest",
          "UnimplementedArticlesServer",
          "Empty",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Descriptor": {
        "code": "func (*Article) Descriptor() ([]byte, []int) {\n\treturn file_article_proto_rawDescGZIP(), []int{0}\n}",
        "is_file_function": true,
        "associated_struct": [
          "CreateCommentRequest_Comment",
          "byte",
          "int",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": [
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP",
          "file_article_proto_rawDescGZIP"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "FavoriteArticle": {
        "code": "func (c *articlesClient) FavoriteArticle(ctx context.Context, in *FavoriteArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error) {\n\tout := new(ArticleResponse)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/FavoriteArticle\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "FavoriteArticleRequest",
          "UnimplementedArticlesServer",
          "ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetArticle": {
        "code": "func (x *CreateAritcleRequest) GetArticle() *CreateAritcleRequest_Article {\n\tif x != nil {\n\t\treturn x.Article\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "GetArticleRequest",
          "UnimplementedArticlesServer",
          "ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetArticles": {
        "code": "func (x *ArticlesResponse) GetArticles() []*Article {\n\tif x != nil {\n\t\treturn x.Articles\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "GetArticlesRequest",
          "UnimplementedArticlesServer",
          "ArticlesResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "int64",
          "int64",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article",
          "int32"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetArticlesCount": {
        "code": "func (x *ArticlesResponse) GetArticlesCount() int32 {\n\tif x != nil {\n\t\treturn x.ArticlesCount\n\t}\n\treturn 0\n}",
        "is_file_function": true,
        "associated_struct": [
          "ArticlesResponse",
          "int32",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article",
          "int32"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetAuthor": {
        "code": "func (x *Article) GetAuthor() *Profile {\n\tif x != nil {\n\t\treturn x.Author\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "GetArticlesRequest",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "int64",
          "int64"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetBody": {
        "code": "func (x *Article) GetBody() string {\n\tif x != nil {\n\t\treturn x.Body\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "CreateCommentRequest_Comment",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetComment": {
        "code": "func (x *CreateCommentRequest) GetComment() *CreateCommentRequest_Comment {\n\tif x != nil {\n\t\treturn x.Comment\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "CommentResponse",
          "Comment",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Comment",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "Profile"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetComments": {
        "code": "func (x *CommentsResponse) GetComments() []*Comment {\n\tif x != nil {\n\t\treturn x.Comments\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "GetCommentsRequest",
          "UnimplementedArticlesServer",
          "CommentsResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Comment"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetCreatedAt": {
        "code": "func (x *Article) GetCreatedAt() string {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "Comment",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "Profile"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetDescription": {
        "code": "func (x *Article) GetDescription() string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateArticleRequest_Article",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFavorited": {
        "code": "func (x *Article) GetFavorited() bool {\n\tif x != nil {\n\t\treturn x.Favorited\n\t}\n\treturn false\n}",
        "is_file_function": true,
        "associated_struct": [
          "GetArticlesRequest",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "int64",
          "int64"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFavoritesCount": {
        "code": "func (x *Article) GetFavoritesCount() int32 {\n\tif x != nil {\n\t\treturn x.FavoritesCount\n\t}\n\treturn 0\n}",
        "is_file_function": true,
        "associated_struct": [
          "Article",
          "int32",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string",
          "string",
          "string",
          "bool",
          "int32",
          "Profile"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFeedArticles": {
        "code": "func (c *articlesClient) GetFeedArticles(ctx context.Context, in *GetFeedArticlesRequest, opts ...grpc.CallOption) (*ArticlesResponse, error) {\n\tout := new(ArticlesResponse)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/GetFeedArticles\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "GetFeedArticlesRequest",
          "UnimplementedArticlesServer",
          "ArticlesResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "int64",
          "int64",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article",
          "int32"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetId": {
        "code": "func (x *Comment) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "DeleteCommentRequest",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetLimit": {
        "code": "func (x *GetArticlesRequest) GetLimit() int64 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}",
        "is_file_function": true,
        "associated_struct": [
          "GetFeedArticlesRequest",
          "int64",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "int64",
          "int64"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetOffset": {
        "code": "func (x *GetArticlesRequest) GetOffset() int64 {\n\tif x != nil {\n\t\treturn x.Offset\n\t}\n\treturn 0\n}",
        "is_file_function": true,
        "associated_struct": [
          "GetFeedArticlesRequest",
          "int64",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "int64",
          "int64"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetSlug": {
        "code": "func (x *Article) GetSlug() string {\n\tif x != nil {\n\t\treturn x.Slug\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateArticleRequest_Article",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetTag": {
        "code": "func (x *GetArticlesRequest) GetTag() string {\n\tif x != nil {\n\t\treturn x.Tag\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "GetArticlesRequest",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "int64",
          "int64"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetTagList": {
        "code": "func (x *Article) GetTagList() []string {\n\tif x != nil {\n\t\treturn x.TagList\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "CreateAritcleRequest_Article",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetTags": {
        "code": "func (x *TagsResponse) GetTags() []string {\n\tif x != nil {\n\t\treturn x.Tags\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "Empty",
          "UnimplementedArticlesServer",
          "TagsResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetTitle": {
        "code": "func (x *Article) GetTitle() string {\n\tif x != nil {\n\t\treturn x.Title\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateArticleRequest_Article",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetUpdatedAt": {
        "code": "func (x *Article) GetUpdatedAt() string {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "Comment",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "Profile"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "NewArticlesClient": {
        "code": "func NewArticlesClient(cc grpc.ClientConnInterface) ArticlesClient {\n\treturn &articlesClient{cc}\n}",
        "is_file_function": true,
        "associated_struct": [
          "grpc.ClientConnInterface",
          "ArticlesClient"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/clientconn.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "ProtoMessage": {
        "code": "func (*Article) ProtoMessage() {}",
        "is_file_function": true,
        "associated_struct": [
          "CreateCommentRequest_Comment",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "ProtoReflect": {
        "code": "func (x *Article) ProtoReflect() protoreflect.Message {\n\tmi := &file_article_proto_msgTypes[0]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}",
        "is_file_function": true,
        "associated_struct": [
          "CreateCommentRequest_Comment",
          "protoreflect.Message",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": [
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/reflect/protoreflect/value.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterArticlesServer": {
        "code": "func RegisterArticlesServer(s *grpc.Server, srv ArticlesServer) {\n\ts.RegisterService(&_Articles_serviceDesc, srv)\n}",
        "is_file_function": true,
        "associated_struct": [
          "grpc.Server",
          "ArticlesServer",
          "serverOptions",
          "sync.Mutex",
          "map[net.Listener]bool",
          "map[transport.ServerTransport]bool",
          "bool",
          "bool",
          "sync.Cond",
          "map[string]service",
          "trace.EventLog",
          "grpcsync.Event",
          "grpcsync.Event",
          "sync.Once",
          "sync.WaitGroup",
          "int64",
          "channelzData"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/server.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Reset": {
        "code": "func (x *Article) Reset() {\n\t*x = Article{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_article_proto_msgTypes[0]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "CreateCommentRequest_Comment",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": [
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "String": {
        "code": "func (x *Article) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}",
        "is_file_function": true,
        "associated_struct": [
          "CreateCommentRequest_Comment",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UnfavoriteArticle": {
        "code": "func (c *articlesClient) UnfavoriteArticle(ctx context.Context, in *UnfavoriteArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error) {\n\tout := new(ArticleResponse)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/UnfavoriteArticle\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "UnfavoriteArticleRequest",
          "UnimplementedArticlesServer",
          "ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UpdateArticle": {
        "code": "func (c *articlesClient) UpdateArticle(ctx context.Context, in *UpdateArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error) {\n\tout := new(ArticleResponse)\n\terr := c.cc.Invoke(ctx, \"/article.Articles/UpdateArticle\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "UpdateArticleRequest",
          "UnimplementedArticlesServer",
          "ArticleResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "UpdateArticleRequest_Article",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Article"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "_Articles_CreateArticle_Handler": {
        "code": "func _Articles_CreateArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateAritcleRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).CreateArticle(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/CreateArticle\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).CreateArticle(ctx, req.(*CreateAritcleRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "71674.0xc0002d4ae0.false",
          "context.Context",
          "func([71717.0xc0002d4b40.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "71779.0xc0002d4c00.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_CreateComment_Handler": {
        "code": "func _Articles_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateCommentRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).CreateComment(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/CreateComment\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).CreateComment(ctx, req.(*CreateCommentRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "77443.0xc00076d8f0.false",
          "context.Context",
          "func([77486.0xc00076d950.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "77548.0xc00076da10.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_DeleteArticle_Handler": {
        "code": "func _Articles_DeleteArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(DeleteArticleRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).DeleteArticle(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/DeleteArticle\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).DeleteArticle(ctx, req.(*DeleteArticleRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "74881.0xc00076c4b0.false",
          "context.Context",
          "func([74924.0xc00076c510.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "74986.0xc00076c5d0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_DeleteComment_Handler": {
        "code": "func _Articles_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(DeleteCommentRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).DeleteComment(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/DeleteComment\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).DeleteComment(ctx, req.(*DeleteCommentRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "78721.0xc00061d740.false",
          "context.Context",
          "func([78764.0xc00061d7a0.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "78826.0xc00061d860.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_FavoriteArticle_Handler": {
        "code": "func _Articles_FavoriteArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(FavoriteArticleRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).FavoriteArticle(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/FavoriteArticle\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).FavoriteArticle(ctx, req.(*FavoriteArticleRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "75528.0xc00076c9c0.false",
          "context.Context",
          "func([75571.0xc00076ca20.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "75633.0xc00076cae0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_GetArticle_Handler": {
        "code": "func _Articles_GetArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetArticleRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).GetArticle(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/GetArticle\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).GetArticle(ctx, req.(*GetArticleRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "72973.0xc0002d5500.false",
          "context.Context",
          "func([73016.0xc0002d5560.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "73078.0xc0002d5620.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_GetArticles_Handler": {
        "code": "func _Articles_GetArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetArticlesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).GetArticles(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/GetArticles\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).GetArticles(ctx, req.(*GetArticlesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "73601.0xc0002d5a10.false",
          "context.Context",
          "func([73644.0xc0002d5a70.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "73706.0xc0002d5b30.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_GetComments_Handler": {
        "code": "func _Articles_GetComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetCommentsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).GetComments(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/GetComments\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).GetComments(ctx, req.(*GetCommentsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "78086.0xc00061d230.false",
          "context.Context",
          "func([78129.0xc00061d290.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "78191.0xc00061d350.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_GetFeedArticles_Handler": {
        "code": "func _Articles_GetFeedArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetFeedArticlesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).GetFeedArticles(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/GetFeedArticles\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).GetFeedArticles(ctx, req.(*GetFeedArticlesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "72321.0xc0002d4ff0.false",
          "context.Context",
          "func([72364.0xc0002d5050.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "72426.0xc0002d5110.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_GetTags_Handler": {
        "code": "func _Articles_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(Empty)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).GetTags(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/GetTags\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).GetTags(ctx, req.(*Empty))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "76846.0xc00076d3e0.false",
          "context.Context",
          "func([76889.0xc00076d440.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "76951.0xc00076d500.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_UnfavoriteArticle_Handler": {
        "code": "func _Articles_UnfavoriteArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UnfavoriteArticleRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).UnfavoriteArticle(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/UnfavoriteArticle\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).UnfavoriteArticle(ctx, req.(*UnfavoriteArticleRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "76187.0xc00076ced0.false",
          "context.Context",
          "func([76230.0xc00076cf30.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "76292.0xc00076cff0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Articles_UpdateArticle_Handler": {
        "code": "func _Articles_UpdateArticle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateArticleRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(ArticlesServer).UpdateArticle(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/article.Articles/UpdateArticle\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(ArticlesServer).UpdateArticle(ctx, req.(*UpdateArticleRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "74236.0xc0002d5f20.false",
          "context.Context",
          "func([74279.0xc00076c000.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "74341.0xc00076c0c0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "file_article_proto_init": {
        "code": "func file_article_proto_init() {\n\tif File_article_proto != nil {\n\t\treturn\n\t}\n\tfile_user_proto_init()\n\tfile_empty_proto_init()\n\tif !protoimpl.UnsafeEnabled {\n\t\tfile_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*Article); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*Comment); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CreateAritcleRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*GetArticleRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*GetArticlesRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*GetFeedArticlesRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UpdateArticleRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*DeleteArticleRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*FavoriteArticleRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UnfavoriteArticleRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CreateCommentRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*GetCommentsRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*DeleteCommentRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*ArticleResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*ArticlesResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*TagsResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CommentResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CommentsResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CreateAritcleRequest_Article); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UpdateArticleRequest_Article); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_article_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CreateCommentRequest_Comment); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_article_proto_rawDesc,\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   21,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   1,\n\t\t},\n\t\tGoTypes:           file_article_proto_goTypes,\n\t\tDependencyIndexes: file_article_proto_depIdxs,\n\t\tMessageInfos:      file_article_proto_msgTypes,\n\t}.Build()\n\tFile_article_proto = out.File\n\tfile_article_proto_rawDesc = nil\n\tfile_article_proto_goTypes = nil\n\tfile_article_proto_depIdxs = nil\n}",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "file_user_proto_init",
          "file_empty_proto_init"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      },
      "file_article_proto_rawDescGZIP": {
        "code": "func file_article_proto_rawDescGZIP() []byte {\n\tfile_article_proto_rawDescOnce.Do(func() {\n\t\tfile_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_article_proto_rawDescData)\n\t})\n\treturn file_article_proto_rawDescData\n}",
        "is_file_function": true,
        "associated_struct": [
          "byte"
        ],
        "associated_func": null,
        "dependent_files": null,
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "init": {
        "code": "func init() { file_article_proto_init() }",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "file_article_proto_init"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "71674.0xc0002d4ae0.false": "",
      "71779.0xc0002d4c00.false": "",
      "72321.0xc0002d4ff0.false": "",
      "72426.0xc0002d5110.false": "",
      "72973.0xc0002d5500.false": "",
      "73078.0xc0002d5620.false": "",
      "73601.0xc0002d5a10.false": "",
      "73706.0xc0002d5b30.false": "",
      "74236.0xc0002d5f20.false": "",
      "74341.0xc00076c0c0.false": "",
      "74881.0xc00076c4b0.false": "",
      "74986.0xc00076c5d0.false": "",
      "75528.0xc00076c9c0.false": "",
      "75633.0xc00076cae0.false": "",
      "76187.0xc00076ced0.false": "",
      "76292.0xc00076cff0.false": "",
      "76846.0xc00076d3e0.false": "",
      "76951.0xc00076d500.false": "",
      "77443.0xc00076d8f0.false": "",
      "77548.0xc00076da10.false": "",
      "78086.0xc00061d230.false": "",
      "78191.0xc00061d350.false": "",
      "78721.0xc00061d740.false": "",
      "78826.0xc00061d860.false": "",
      "Article": "type Article struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug           string   `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n\tTitle          string   `protobuf:\"bytes,2,opt,name=title,proto3\" json:\"title,omitempty\"`\n\tDescription    string   `protobuf:\"bytes,3,opt,name=description,proto3\" json:\"description,omitempty\"`\n\tBody           string   `protobuf:\"bytes,4,opt,name=body,proto3\" json:\"body,omitempty\"`\n\tTagList        []string `protobuf:\"bytes,5,rep,name=tagList,proto3\" json:\"tagList,omitempty\"`\n\tCreatedAt      string   `protobuf:\"bytes,6,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt      string   `protobuf:\"bytes,7,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tFavorited      bool     `protobuf:\"varint,8,opt,name=favorited,proto3\" json:\"favorited,omitempty\"`\n\tFavoritesCount int32    `protobuf:\"varint,9,opt,name=favoritesCount,proto3\" json:\"favoritesCount,omitempty\"`\n\tAuthor         *Profile `protobuf:\"bytes,10,opt,name=author,proto3\" json:\"author,omitempty\"`\n}",
      "ArticleResponse": "type ArticleResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tArticle *Article `protobuf:\"bytes,1,opt,name=article,proto3\" json:\"article,omitempty\"`\n}",
      "ArticlesClient": "type ArticlesClient interface {\n\tCreateArticle(ctx context.Context, in *CreateAritcleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tGetFeedArticles(ctx context.Context, in *GetFeedArticlesRequest, opts ...grpc.CallOption) (*ArticlesResponse, error)\n\tGetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tGetArticles(ctx context.Context, in *GetArticlesRequest, opts ...grpc.CallOption) (*ArticlesResponse, error)\n\tUpdateArticle(ctx context.Context, in *UpdateArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tDeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*Empty, error)\n\tFavoriteArticle(ctx context.Context, in *FavoriteArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tUnfavoriteArticle(ctx context.Context, in *UnfavoriteArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tGetTags(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TagsResponse, error)\n\tCreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CommentResponse, error)\n\tGetComments(ctx context.Context, in *GetCommentsRequest, opts ...grpc.CallOption) (*CommentsResponse, error)\n\tDeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*Empty, error)\n}",
      "ArticlesResponse": "type ArticlesResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tArticles      []*Article `protobuf:\"bytes,1,rep,name=articles,proto3\" json:\"articles,omitempty\"`\n\tArticlesCount int32      `protobuf:\"varint,2,opt,name=articlesCount,proto3\" json:\"articlesCount,omitempty\"`\n}",
      "ArticlesServer": "type ArticlesServer interface {\n\tCreateArticle(context.Context, *CreateAritcleRequest) (*ArticleResponse, error)\n\tGetFeedArticles(context.Context, *GetFeedArticlesRequest) (*ArticlesResponse, error)\n\tGetArticle(context.Context, *GetArticleRequest) (*ArticleResponse, error)\n\tGetArticles(context.Context, *GetArticlesRequest) (*ArticlesResponse, error)\n\tUpdateArticle(context.Context, *UpdateArticleRequest) (*ArticleResponse, error)\n\tDeleteArticle(context.Context, *DeleteArticleRequest) (*Empty, error)\n\tFavoriteArticle(context.Context, *FavoriteArticleRequest) (*ArticleResponse, error)\n\tUnfavoriteArticle(context.Context, *UnfavoriteArticleRequest) (*ArticleResponse, error)\n\tGetTags(context.Context, *Empty) (*TagsResponse, error)\n\tCreateComment(context.Context, *CreateCommentRequest) (*CommentResponse, error)\n\tGetComments(context.Context, *GetCommentsRequest) (*CommentsResponse, error)\n\tDeleteComment(context.Context, *DeleteCommentRequest) (*Empty, error)\n}",
      "Comment": "type Comment struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tId        string   `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tCreatedAt string   `protobuf:\"bytes,2,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt string   `protobuf:\"bytes,3,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tBody      string   `protobuf:\"bytes,4,opt,name=body,proto3\" json:\"body,omitempty\"`\n\tAuthor    *Profile `protobuf:\"bytes,5,opt,name=author,proto3\" json:\"author,omitempty\"`\n}",
      "CommentResponse": "type CommentResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tComment *Comment `protobuf:\"bytes,1,opt,name=comment,proto3\" json:\"comment,omitempty\"`\n}",
      "CommentsResponse": "type CommentsResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tComments []*Comment `protobuf:\"bytes,1,rep,name=comments,proto3\" json:\"comments,omitempty\"`\n}",
      "CreateAritcleRequest": "type CreateAritcleRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tArticle *CreateAritcleRequest_Article `protobuf:\"bytes,1,opt,name=article,proto3\" json:\"article,omitempty\"`\n}",
      "CreateAritcleRequest_Article": "type CreateAritcleRequest_Article struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTitle       string   `protobuf:\"bytes,1,opt,name=title,proto3\" json:\"title,omitempty\"`\n\tDescription string   `protobuf:\"bytes,2,opt,name=description,proto3\" json:\"description,omitempty\"`\n\tBody        string   `protobuf:\"bytes,3,opt,name=body,proto3\" json:\"body,omitempty\"`\n\tTagList     []string `protobuf:\"bytes,4,rep,name=tagList,proto3\" json:\"tagList,omitempty\"`\n}",
      "CreateCommentRequest": "type CreateCommentRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug    string                        `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n\tComment *CreateCommentRequest_Comment `protobuf:\"bytes,2,opt,name=comment,proto3\" json:\"comment,omitempty\"`\n}",
      "CreateCommentRequest_Comment": "type CreateCommentRequest_Comment struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tBody string `protobuf:\"bytes,1,opt,name=body,proto3\" json:\"body,omitempty\"`\n}",
      "DeleteArticleRequest": "type DeleteArticleRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug string `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "DeleteCommentRequest": "type DeleteCommentRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug string `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n\tId   string `protobuf:\"bytes,2,opt,name=id,proto3\" json:\"id,omitempty\"`\n}",
      "Empty": "type Empty struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n}",
      "FavoriteArticleRequest": "type FavoriteArticleRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug string `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "GetArticleRequest": "type GetArticleRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug string `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "GetArticlesRequest": "type GetArticlesRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTag       string `protobuf:\"bytes,1,opt,name=tag,proto3\" json:\"tag,omitempty\"`\n\tAuthor    string `protobuf:\"bytes,2,opt,name=author,proto3\" json:\"author,omitempty\"`\n\tFavorited string `protobuf:\"bytes,3,opt,name=favorited,proto3\" json:\"favorited,omitempty\"`\n\tLimit     int64  `protobuf:\"varint,4,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tOffset    int64  `protobuf:\"varint,5,opt,name=offset,proto3\" json:\"offset,omitempty\"`\n}",
      "GetCommentsRequest": "type GetCommentsRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug string `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "GetFeedArticlesRequest": "type GetFeedArticlesRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tLimit  int64 `protobuf:\"varint,1,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tOffset int64 `protobuf:\"varint,2,opt,name=offset,proto3\" json:\"offset,omitempty\"`\n}",
      "Profile": "type Profile struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n\tUsername\tstring\t`protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tBio\t\tstring\t`protobuf:\"bytes,2,opt,name=bio,proto3\" json:\"bio,omitempty\"`\n\tImage\t\tstring\t`protobuf:\"bytes,3,opt,name=image,proto3\" json:\"image,omitempty\"`\n\tFollowing\tbool\t`protobuf:\"varint,4,opt,name=following,proto3\" json:\"following,omitempty\"`\n}",
      "TagsResponse": "type TagsResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTags []string `protobuf:\"bytes,1,rep,name=tags,proto3\" json:\"tags,omitempty\"`\n}",
      "UnfavoriteArticleRequest": "type UnfavoriteArticleRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tSlug string `protobuf:\"bytes,1,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "UnimplementedArticlesServer": "type UnimplementedArticlesServer struct {\n}",
      "UpdateArticleRequest": "type UpdateArticleRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tArticle *UpdateArticleRequest_Article `protobuf:\"bytes,1,opt,name=article,proto3\" json:\"article,omitempty\"`\n}",
      "UpdateArticleRequest_Article": "type UpdateArticleRequest_Article struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tTitle       string `protobuf:\"bytes,1,opt,name=title,proto3\" json:\"title,omitempty\"`\n\tDescription string `protobuf:\"bytes,2,opt,name=description,proto3\" json:\"description,omitempty\"`\n\tBody        string `protobuf:\"bytes,3,opt,name=body,proto3\" json:\"body,omitempty\"`\n\tSlug        string `protobuf:\"bytes,4,opt,name=slug,proto3\" json:\"slug,omitempty\"`\n}",
      "articlesClient": "type articlesClient struct {\n\tcc grpc.ClientConnInterface\n}",
      "bool": "",
      "byte": "",
      "channelzData": "",
      "context.Context": "",
      "error": "",
      "func([71717.0xc0002d4b40.false]) ([error])": "",
      "func([72364.0xc0002d5050.false]) ([error])": "",
      "func([73016.0xc0002d5560.false]) ([error])": "",
      "func([73644.0xc0002d5a70.false]) ([error])": "",
      "func([74279.0xc00076c000.false]) ([error])": "",
      "func([74924.0xc00076c510.false]) ([error])": "",
      "func([75571.0xc00076ca20.false]) ([error])": "",
      "func([76230.0xc00076cf30.false]) ([error])": "",
      "func([76889.0xc00076d440.false]) ([error])": "",
      "func([77486.0xc00076d950.false]) ([error])": "",
      "func([78129.0xc00061d290.false]) ([error])": "",
      "func([78764.0xc00061d7a0.false]) ([error])": "",
      "grpc.ClientConnInterface": "type ClientConnInterface interface {\n\tInvoke(ctx context.Context, method string, args interface{}, reply interface{}, opts ...CallOption) error\n\tNewStream(ctx context.Context, desc *StreamDesc, method string, opts ...CallOption) (ClientStream, error)\n}",
      "grpc.Server": "type Server struct {\n\topts\t\t\tserverOptions\n\tmu\t\t\tsync.Mutex\n\tlis\t\t\tmap[net.Listener]bool\n\tconns\t\t\tmap[transport.ServerTransport]bool\n\tserve\t\t\tbool\n\tdrain\t\t\tbool\n\tcv\t\t\t*sync.Cond\n\tm\t\t\tmap[string]*service\n\tevents\t\t\ttrace.EventLog\n\tquit\t\t\t*grpcsync.Event\n\tdone\t\t\t*grpcsync.Event\n\tchannelzRemoveOnce\tsync.Once\n\tserveWG\t\t\tsync.WaitGroup\n\tchannelzID\t\tint64\n\tczData\t\t\t*channelzData\n}",
      "grpc.UnaryServerInterceptor": "type UnaryServerInterceptor func(ctx context.Context, req interface{}, info *UnaryServerInfo, handler UnaryHandler) (resp interface{}, err error)",
      "grpcsync.Event": "",
      "int": "",
      "int32": "",
      "int64": "",
      "map[net.Listener]bool": "",
      "map[string]service": "",
      "map[transport.ServerTransport]bool": "",
      "protoimpl.MessageState": "type MessageState = impl.MessageState",
      "protoimpl.SizeCache": "type SizeCache = impl.SizeCache",
      "protoimpl.UnknownFields": "type UnknownFields = impl.UnknownFields",
      "protoreflect.Message": "type Message interface {\n\tDescriptor() MessageDescriptor\n\tType() MessageType\n\tNew() Message\n\tInterface() ProtoMessage\n\tRange(f func(FieldDescriptor, Value) bool)\n\tHas(FieldDescriptor) bool\n\tClear(FieldDescriptor)\n\tGet(FieldDescriptor) Value\n\tSet(FieldDescriptor, Value)\n\tMutable(FieldDescriptor) Value\n\tNewField(FieldDescriptor) Value\n\tWhichOneof(OneofDescriptor) FieldDescriptor\n\tGetUnknown() RawFields\n\tSetUnknown(RawFields)\n\tIsValid() bool\n\tProtoMethods() *methods\n}",
      "serverOptions": "",
      "string": "",
      "sync.Cond": "",
      "sync.Mutex": "",
      "sync.Once": "",
      "sync.WaitGroup": "",
      "trace.EventLog": "",
      "x": ""
    },
    "package_dict": {
      "_": "google.golang.org/genproto/googleapis/api/annotations",
      "codes": "google.golang.org/grpc/codes",
      "grpc": "google.golang.org/grpc",
      "proto": "github.com/golang/protobuf/proto",
      "protoimpl": "google.golang.org/protobuf/runtime/protoimpl",
      "protoreflect": "google.golang.org/protobuf/reflect/protoreflect",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "proto",
    "imports": "import (\n\tcontext \"context\"\n\tproto \"github.com/golang/protobuf/proto\"\n\t_ \"github.com/golang/protobuf/ptypes/timestamp\"\n\t_ \"google.golang.org/genproto/googleapis/api/annotations\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go": {
    "function_dict": {
      "RegisterArticlesHandler": {
        "code": "func RegisterArticlesHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {\n\treturn RegisterArticlesHandlerClient(ctx, mux, NewArticlesClient(conn))\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "grpc.ClientConn",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool",
          "context.Context",
          "context.CancelFunc",
          "string",
          "resolver.Target",
          "string",
          "dialOptions",
          "connectivityStateManager",
          "balancer.BuildOptions",
          "pickerWrapper",
          "sync.RWMutex",
          "ccResolverWrapper",
          "ServiceConfig",
          "map[addrConn]16806.0xc000a6cc60.false",
          "keepalive.ClientParameters",
          "string",
          "ccBalancerWrapper",
          "atomic.Value",
          "grpcsync.Event",
          "int64",
          "channelzData"
        ],
        "associated_func": [
          "RegisterArticlesHandlerClient",
          "NewArticlesClient"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/clientconn.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterArticlesHandlerClient": {
        "code": "func RegisterArticlesHandlerClient(ctx context.Context, mux *runtime.ServeMux, client ArticlesClient) error {\n\n\tmux.Handle(\"POST\", pattern_Articles_CreateArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_CreateArticle_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_CreateArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetFeedArticles_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_GetFeedArticles_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetFeedArticles_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_GetArticle_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetArticles_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_GetArticles_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetArticles_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"PUT\", pattern_Articles_UpdateArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_UpdateArticle_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_UpdateArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"DELETE\", pattern_Articles_DeleteArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_DeleteArticle_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_DeleteArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Articles_FavoriteArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_FavoriteArticle_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_FavoriteArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"DELETE\", pattern_Articles_UnfavoriteArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_UnfavoriteArticle_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_UnfavoriteArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetTags_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_GetTags_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetTags_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Articles_CreateComment_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_CreateComment_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_CreateComment_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetComments_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_GetComments_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetComments_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_DeleteComment_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Articles_DeleteComment_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_DeleteComment_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "ArticlesClient",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool"
        ],
        "associated_func": [
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_CreateArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_CreateArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_GetFeedArticles_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetFeedArticles_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_GetArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_GetArticles_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetArticles_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_UpdateArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_UpdateArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_DeleteArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_DeleteArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_FavoriteArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_FavoriteArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_UnfavoriteArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_UnfavoriteArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_GetTags_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetTags_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_CreateComment_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_CreateComment_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_GetComments_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetComments_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Articles_DeleteComment_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_DeleteComment_0"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterArticlesHandlerFromEndpoint": {
        "code": "func RegisterArticlesHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {\n\tconn, err := grpc.Dial(endpoint, opts...)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer func() {\n\t\tif err != nil {\n\t\t\tif cerr := conn.Close(); cerr != nil {\n\t\t\t\tgrpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tgo func() {\n\t\t\t<-ctx.Done()\n\t\t\tif cerr := conn.Close(); cerr != nil {\n\t\t\t\tgrpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)\n\t\t\t}\n\t\t}()\n\t}()\n\n\treturn RegisterArticlesHandler(ctx, mux, conn)\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "string",
          "grpc.DialOption",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool"
        ],
        "associated_func": [
          "grpc.Dial",
          "grpclog.Infof",
          "grpclog.Infof",
          "RegisterArticlesHandler"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/dialoptions.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/clientconn.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/grpclog/grpclog.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/grpclog/grpclog.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterArticlesHandlerServer": {
        "code": "func RegisterArticlesHandlerServer(ctx context.Context, mux *runtime.ServeMux, server ArticlesServer) error {\n\n\tmux.Handle(\"POST\", pattern_Articles_CreateArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_CreateArticle_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_CreateArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetFeedArticles_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_GetFeedArticles_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetFeedArticles_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_GetArticle_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetArticles_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_GetArticles_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetArticles_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"PUT\", pattern_Articles_UpdateArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_UpdateArticle_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_UpdateArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"DELETE\", pattern_Articles_DeleteArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_DeleteArticle_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_DeleteArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Articles_FavoriteArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_FavoriteArticle_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_FavoriteArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"DELETE\", pattern_Articles_UnfavoriteArticle_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_UnfavoriteArticle_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_UnfavoriteArticle_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetTags_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_GetTags_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetTags_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Articles_CreateComment_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_CreateComment_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_CreateComment_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_GetComments_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_GetComments_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_GetComments_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Articles_DeleteComment_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Articles_DeleteComment_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Articles_DeleteComment_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "ArticlesServer",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool"
        ],
        "associated_func": [
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_CreateArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_CreateArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_GetFeedArticles_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetFeedArticles_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_GetArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_GetArticles_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetArticles_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_UpdateArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_UpdateArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_DeleteArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_DeleteArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_FavoriteArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_FavoriteArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_UnfavoriteArticle_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_UnfavoriteArticle_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_GetTags_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetTags_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_CreateComment_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_CreateComment_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_GetComments_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_GetComments_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Articles_DeleteComment_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Articles_DeleteComment_0"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "local_request_Articles_CreateArticle_0": {
        "code": "func local_request_Articles_CreateArticle_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq CreateAritcleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := server.CreateArticle(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_CreateComment_0": {
        "code": "func local_request_Articles_CreateComment_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq CreateCommentRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := server.CreateComment(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_DeleteArticle_0": {
        "code": "func local_request_Articles_DeleteArticle_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq DeleteArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := server.DeleteArticle(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_DeleteComment_0": {
        "code": "func local_request_Articles_DeleteComment_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq DeleteCommentRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tval, ok = pathParams[\"id\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")\n\t}\n\n\tprotoReq.Id, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)\n\t}\n\n\tmsg, err := server.DeleteComment(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_FavoriteArticle_0": {
        "code": "func local_request_Articles_FavoriteArticle_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq FavoriteArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := server.FavoriteArticle(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_GetArticle_0": {
        "code": "func local_request_Articles_GetArticle_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := server.GetArticle(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_GetArticles_0": {
        "code": "func local_request_Articles_GetArticles_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetArticlesRequest\n\tvar metadata runtime.ServerMetadata\n\n\tif err := runtime.PopulateQueryParameters(&protoReq, req.URL.Query(), filter_Articles_GetArticles_0); err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := server.GetArticles(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "runtime.PopulateQueryParameters",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/query.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_GetComments_0": {
        "code": "func local_request_Articles_GetComments_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetCommentsRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := server.GetComments(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_GetFeedArticles_0": {
        "code": "func local_request_Articles_GetFeedArticles_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetFeedArticlesRequest\n\tvar metadata runtime.ServerMetadata\n\n\tif err := runtime.PopulateQueryParameters(&protoReq, req.URL.Query(), filter_Articles_GetFeedArticles_0); err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := server.GetFeedArticles(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "runtime.PopulateQueryParameters",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/query.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_GetTags_0": {
        "code": "func local_request_Articles_GetTags_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq Empty\n\tvar metadata runtime.ServerMetadata\n\n\tmsg, err := server.GetTags(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_UnfavoriteArticle_0": {
        "code": "func local_request_Articles_UnfavoriteArticle_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UnfavoriteArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := server.UnfavoriteArticle(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Articles_UpdateArticle_0": {
        "code": "func local_request_Articles_UpdateArticle_0(ctx context.Context, marshaler runtime.Marshaler, server ArticlesServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UpdateArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"article.slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"article.slug\")\n\t}\n\n\terr = runtime.PopulateFieldFromPath(&protoReq, \"article.slug\", val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"article.slug\", err)\n\t}\n\n\tmsg, err := server.UpdateArticle(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.PopulateFieldFromPath",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/query.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_CreateArticle_0": {
        "code": "func request_Articles_CreateArticle_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq CreateAritcleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := client.CreateArticle(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_CreateComment_0": {
        "code": "func request_Articles_CreateComment_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq CreateCommentRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := client.CreateComment(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_DeleteArticle_0": {
        "code": "func request_Articles_DeleteArticle_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq DeleteArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := client.DeleteArticle(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_DeleteComment_0": {
        "code": "func request_Articles_DeleteComment_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq DeleteCommentRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tval, ok = pathParams[\"id\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")\n\t}\n\n\tprotoReq.Id, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)\n\t}\n\n\tmsg, err := client.DeleteComment(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_FavoriteArticle_0": {
        "code": "func request_Articles_FavoriteArticle_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq FavoriteArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := client.FavoriteArticle(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_GetArticle_0": {
        "code": "func request_Articles_GetArticle_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := client.GetArticle(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_GetArticles_0": {
        "code": "func request_Articles_GetArticles_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetArticlesRequest\n\tvar metadata runtime.ServerMetadata\n\n\tif err := req.ParseForm(); err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\tif err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_Articles_GetArticles_0); err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := client.GetArticles(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.PopulateQueryParameters",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/query.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_GetComments_0": {
        "code": "func request_Articles_GetComments_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetCommentsRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := client.GetComments(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_GetFeedArticles_0": {
        "code": "func request_Articles_GetFeedArticles_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq GetFeedArticlesRequest\n\tvar metadata runtime.ServerMetadata\n\n\tif err := req.ParseForm(); err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\tif err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_Articles_GetFeedArticles_0); err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := client.GetFeedArticles(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.PopulateQueryParameters",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/query.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_GetTags_0": {
        "code": "func request_Articles_GetTags_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq Empty\n\tvar metadata runtime.ServerMetadata\n\n\tmsg, err := client.GetTags(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_UnfavoriteArticle_0": {
        "code": "func request_Articles_UnfavoriteArticle_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UnfavoriteArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"slug\")\n\t}\n\n\tprotoReq.Slug, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"slug\", err)\n\t}\n\n\tmsg, err := client.UnfavoriteArticle(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Articles_UpdateArticle_0": {
        "code": "func request_Articles_UpdateArticle_0(ctx context.Context, marshaler runtime.Marshaler, client ArticlesClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UpdateArticleRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"article.slug\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"article.slug\")\n\t}\n\n\terr = runtime.PopulateFieldFromPath(&protoReq, \"article.slug\", val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"article.slug\", err)\n\t}\n\n\tmsg, err := client.UpdateArticle(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "ArticlesClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.PopulateFieldFromPath",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/query.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "ArticlesClient": "type ArticlesClient interface {\n\tCreateArticle(ctx context.Context, in *CreateAritcleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tGetFeedArticles(ctx context.Context, in *GetFeedArticlesRequest, opts ...grpc.CallOption) (*ArticlesResponse, error)\n\tGetArticle(ctx context.Context, in *GetArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tGetArticles(ctx context.Context, in *GetArticlesRequest, opts ...grpc.CallOption) (*ArticlesResponse, error)\n\tUpdateArticle(ctx context.Context, in *UpdateArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tDeleteArticle(ctx context.Context, in *DeleteArticleRequest, opts ...grpc.CallOption) (*Empty, error)\n\tFavoriteArticle(ctx context.Context, in *FavoriteArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tUnfavoriteArticle(ctx context.Context, in *UnfavoriteArticleRequest, opts ...grpc.CallOption) (*ArticleResponse, error)\n\tGetTags(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TagsResponse, error)\n\tCreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CommentResponse, error)\n\tGetComments(ctx context.Context, in *GetCommentsRequest, opts ...grpc.CallOption) (*CommentsResponse, error)\n\tDeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*Empty, error)\n}",
      "ArticlesServer": "type ArticlesServer interface {\n\tCreateArticle(context.Context, *CreateAritcleRequest) (*ArticleResponse, error)\n\tGetFeedArticles(context.Context, *GetFeedArticlesRequest) (*ArticlesResponse, error)\n\tGetArticle(context.Context, *GetArticleRequest) (*ArticleResponse, error)\n\tGetArticles(context.Context, *GetArticlesRequest) (*ArticlesResponse, error)\n\tUpdateArticle(context.Context, *UpdateArticleRequest) (*ArticleResponse, error)\n\tDeleteArticle(context.Context, *DeleteArticleRequest) (*Empty, error)\n\tFavoriteArticle(context.Context, *FavoriteArticleRequest) (*ArticleResponse, error)\n\tUnfavoriteArticle(context.Context, *UnfavoriteArticleRequest) (*ArticleResponse, error)\n\tGetTags(context.Context, *Empty) (*TagsResponse, error)\n\tCreateComment(context.Context, *CreateCommentRequest) (*CommentResponse, error)\n\tGetComments(context.Context, *GetCommentsRequest) (*CommentsResponse, error)\n\tDeleteComment(context.Context, *DeleteCommentRequest) (*Empty, error)\n}",
      "HeaderMatcherFunc": "",
      "ProtoErrorHandlerFunc": "",
      "ServiceConfig": "",
      "StreamErrorHandlerFunc": "",
      "atomic.Value": "",
      "balancer.BuildOptions": "",
      "bool": "",
      "ccBalancerWrapper": "",
      "ccResolverWrapper": "",
      "channelzData": "",
      "connectivityStateManager": "",
      "context.CancelFunc": "",
      "context.Context": "",
      "dialOptions": "",
      "error": "",
      "func([context.Context http.Request]) ([metadata.MD])": "",
      "func([context.Context http.ResponseWriter proto.Message]) ([error])": "",
      "grpc.ClientConn": "type ClientConn struct {\n\tctx\t\t\tcontext.Context\n\tcancel\t\t\tcontext.CancelFunc\n\ttarget\t\t\tstring\n\tparsedTarget\t\tresolver.Target\n\tauthority\t\tstring\n\tdopts\t\t\tdialOptions\n\tcsMgr\t\t\t*connectivityStateManager\n\tbalancerBuildOpts\tbalancer.BuildOptions\n\tblockingpicker\t\t*pickerWrapper\n\tmu\t\t\tsync.RWMutex\n\tresolverWrapper\t\t*ccResolverWrapper\n\tsc\t\t\t*ServiceConfig\n\tconns\t\t\tmap[*addrConn]struct{}\n\tmkp\t\t\tkeepalive.ClientParameters\n\tcurBalancerName\t\tstring\n\tbalancerWrapper\t\t*ccBalancerWrapper\n\tretryThrottler\t\tatomic.Value\n\tfirstResolveEvent\t*grpcsync.Event\n\tchannelzID\t\tint64\n\tczData\t\t\t*channelzData\n}",
      "grpc.DialOption": "type DialOption interface{ apply(*dialOptions) }",
      "grpcsync.Event": "",
      "http.Request": "",
      "int64": "",
      "keepalive.ClientParameters": "",
      "map[addrConn]16806.0xc000a6cc60.false": "",
      "map[string]handler": "",
      "map[string]string": "",
      "marshalerRegistry": "",
      "metadata.MD": "",
      "pickerWrapper": "",
      "proto.Message": "type Message = protoiface.MessageV1",
      "resolver.Target": "",
      "runtime.Marshaler": "type Marshaler interface {\n\tMarshal(v interface{}) ([]byte, error)\n\tUnmarshal(data []byte, v interface{}) error\n\tNewDecoder(r io.Reader) Decoder\n\tNewEncoder(w io.Writer) Encoder\n\tContentType() string\n}",
      "runtime.ServeMux": "type ServeMux struct {\n\thandlers\t\t\tmap[string][]handler\n\tforwardResponseOptions\t\t[]func(context.Context, http.ResponseWriter, proto.Message) error\n\tmarshalers\t\t\tmarshalerRegistry\n\tincomingHeaderMatcher\t\tHeaderMatcherFunc\n\toutgoingHeaderMatcher\t\tHeaderMatcherFunc\n\tmetadataAnnotators\t\t[]func(context.Context, *http.Request) metadata.MD\n\tstreamErrorHandler\t\tStreamErrorHandlerFunc\n\tprotoErrorHandler\t\tProtoErrorHandlerFunc\n\tdisablePathLengthFallback\tbool\n\tlastMatchWins\t\t\tbool\n}",
      "runtime.ServerMetadata": "type ServerMetadata struct {\n\tHeaderMD\tmetadata.MD\n\tTrailerMD\tmetadata.MD\n}",
      "string": "",
      "sync.RWMutex": ""
    },
    "package_dict": {
      "codes": "google.golang.org/grpc/codes",
      "descriptor": "github.com/golang/protobuf/descriptor",
      "grpc": "google.golang.org/grpc",
      "grpclog": "google.golang.org/grpc/grpclog",
      "proto": "github.com/golang/protobuf/proto",
      "runtime": "github.com/grpc-ecosystem/grpc-gateway/runtime",
      "status": "google.golang.org/grpc/status",
      "utilities": "github.com/grpc-ecosystem/grpc-gateway/utilities"
    },
    "package_name": "proto",
    "imports": "import (\n\t\"context\"\n\t\"io\"\n\t\"net/http\"\n\t\"github.com/golang/protobuf/descriptor\"\n\t\"github.com/golang/protobuf/proto\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/runtime\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/utilities\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/grpclog\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go": {
    "function_dict": {
      "Descriptor": {
        "code": "func (*Empty) Descriptor() ([]byte, []int) {\n\treturn file_empty_proto_rawDescGZIP(), []int{0}\n}",
        "is_file_function": true,
        "associated_struct": [
          "Empty",
          "byte",
          "int",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "file_empty_proto_rawDescGZIP"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "ProtoMessage": {
        "code": "func (*Empty) ProtoMessage() {}",
        "is_file_function": true,
        "associated_struct": [
          "Empty",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "ProtoReflect": {
        "code": "func (x *Empty) ProtoReflect() protoreflect.Message {\n\tmi := &file_empty_proto_msgTypes[0]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}",
        "is_file_function": true,
        "associated_struct": [
          "Empty",
          "protoreflect.Message",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "protoimpl.Pointer"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/reflect/protoreflect/value.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Reset": {
        "code": "func (x *Empty) Reset() {\n\t*x = Empty{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_empty_proto_msgTypes[0]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "Empty",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": [
          "protoimpl.Pointer"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "String": {
        "code": "func (x *Empty) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}",
        "is_file_function": true,
        "associated_struct": [
          "Empty",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "file_empty_proto_init": {
        "code": "func file_empty_proto_init() {\n\tif File_empty_proto != nil {\n\t\treturn\n\t}\n\tif !protoimpl.UnsafeEnabled {\n\t\tfile_empty_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*Empty); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_empty_proto_rawDesc,\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   1,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   0,\n\t\t},\n\t\tGoTypes:           file_empty_proto_goTypes,\n\t\tDependencyIndexes: file_empty_proto_depIdxs,\n\t\tMessageInfos:      file_empty_proto_msgTypes,\n\t}.Build()\n\tFile_empty_proto = out.File\n\tfile_empty_proto_rawDesc = nil\n\tfile_empty_proto_goTypes = nil\n\tfile_empty_proto_depIdxs = nil\n}",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": null,
        "dependent_files": null,
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      },
      "file_empty_proto_rawDescGZIP": {
        "code": "func file_empty_proto_rawDescGZIP() []byte {\n\tfile_empty_proto_rawDescOnce.Do(func() {\n\t\tfile_empty_proto_rawDescData = protoimpl.X.CompressGZIP(file_empty_proto_rawDescData)\n\t})\n\treturn file_empty_proto_rawDescData\n}",
        "is_file_function": true,
        "associated_struct": [
          "byte"
        ],
        "associated_func": null,
        "dependent_files": null,
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "init": {
        "code": "func init() { file_empty_proto_init() }",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "file_empty_proto_init"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "Empty": "type Empty struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n}",
      "byte": "",
      "int": "",
      "protoimpl.MessageState": "type MessageState = impl.MessageState",
      "protoimpl.SizeCache": "type SizeCache = impl.SizeCache",
      "protoimpl.UnknownFields": "type UnknownFields = impl.UnknownFields",
      "protoreflect.Message": "type Message interface {\n\tDescriptor() MessageDescriptor\n\tType() MessageType\n\tNew() Message\n\tInterface() ProtoMessage\n\tRange(f func(FieldDescriptor, Value) bool)\n\tHas(FieldDescriptor) bool\n\tClear(FieldDescriptor)\n\tGet(FieldDescriptor) Value\n\tSet(FieldDescriptor, Value)\n\tMutable(FieldDescriptor) Value\n\tNewField(FieldDescriptor) Value\n\tWhichOneof(OneofDescriptor) FieldDescriptor\n\tGetUnknown() RawFields\n\tSetUnknown(RawFields)\n\tIsValid() bool\n\tProtoMethods() *methods\n}",
      "string": "",
      "x": ""
    },
    "package_dict": {
      "proto": "github.com/golang/protobuf/proto",
      "protoimpl": "google.golang.org/protobuf/runtime/protoimpl",
      "protoreflect": "google.golang.org/protobuf/reflect/protoreflect"
    },
    "package_name": "proto",
    "imports": "import (\n\tproto \"github.com/golang/protobuf/proto\"\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go": {
    "function_dict": {
      "CreateUser": {
        "code": "func (c *usersClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {\n\tout := new(UserResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/CreateUser\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "CreateUserRequest",
          "UnimplementedUsersServer",
          "UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "CreateUserRequest_User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "CurrentUser": {
        "code": "func (c *usersClient) CurrentUser(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserResponse, error) {\n\tout := new(UserResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/CurrentUser\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "Empty",
          "UnimplementedUsersServer",
          "UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Descriptor": {
        "code": "func (*User) Descriptor() ([]byte, []int) {\n\treturn file_user_proto_rawDescGZIP(), []int{0}\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "byte",
          "int",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": [
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP",
          "file_user_proto_rawDescGZIP"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "FollowUser": {
        "code": "func (c *usersClient) FollowUser(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*ProfileResponse, error) {\n\tout := new(ProfileResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/FollowUser\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "FollowRequest",
          "UnimplementedUsersServer",
          "ProfileResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetBio": {
        "code": "func (x *User) GetBio() string {\n\tif x != nil {\n\t\treturn x.Bio\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetEmail": {
        "code": "func (x *User) GetEmail() string {\n\tif x != nil {\n\t\treturn x.Email\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFollowing": {
        "code": "func (x *Profile) GetFollowing() bool {\n\tif x != nil {\n\t\treturn x.Following\n\t}\n\treturn false\n}",
        "is_file_function": true,
        "associated_struct": [
          "Profile",
          "bool",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "bool"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/runtime/protoimpl/impl.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetImage": {
        "code": "func (x *User) GetImage() string {\n\tif x != nil {\n\t\treturn x.Image\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetPassword": {
        "code": "func (x *LoginUserRequest_User) GetPassword() string {\n\tif x != nil {\n\t\treturn x.Password\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetProfile": {
        "code": "func (x *ProfileResponse) GetProfile() *Profile {\n\tif x != nil {\n\t\treturn x.Profile\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "ProfileResponse",
          "Profile",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "bool"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetToken": {
        "code": "func (x *User) GetToken() string {\n\tif x != nil {\n\t\treturn x.Token\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetUser": {
        "code": "func (x *LoginUserRequest) GetUser() *LoginUserRequest_User {\n\tif x != nil {\n\t\treturn x.User\n\t}\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "UserResponse",
          "User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetUsername": {
        "code": "func (x *User) GetUsername() string {\n\tif x != nil {\n\t\treturn x.Username\n\t}\n\treturn \"\"\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "LoginUser": {
        "code": "func (c *usersClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {\n\tout := new(UserResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/LoginUser\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "LoginUserRequest",
          "UnimplementedUsersServer",
          "UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "LoginUserRequest_User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "NewUsersClient": {
        "code": "func NewUsersClient(cc grpc.ClientConnInterface) UsersClient {\n\treturn &usersClient{cc}\n}",
        "is_file_function": true,
        "associated_struct": [
          "grpc.ClientConnInterface",
          "UsersClient"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/clientconn.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "ProtoMessage": {
        "code": "func (*User) ProtoMessage() {}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "ProtoReflect": {
        "code": "func (x *User) ProtoReflect() protoreflect.Message {\n\tmi := &file_user_proto_msgTypes[0]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "protoreflect.Message",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": [
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/protobuf@v1.21.0/reflect/protoreflect/value.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterUsersServer": {
        "code": "func RegisterUsersServer(s *grpc.Server, srv UsersServer) {\n\ts.RegisterService(&_Users_serviceDesc, srv)\n}",
        "is_file_function": true,
        "associated_struct": [
          "grpc.Server",
          "UsersServer",
          "serverOptions",
          "sync.Mutex",
          "map[net.Listener]bool",
          "map[transport.ServerTransport]bool",
          "bool",
          "bool",
          "sync.Cond",
          "map[string]service",
          "trace.EventLog",
          "grpcsync.Event",
          "grpcsync.Event",
          "sync.Once",
          "sync.WaitGroup",
          "int64",
          "channelzData"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/server.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Reset": {
        "code": "func (x *User) Reset() {\n\t*x = User{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_user_proto_msgTypes[0]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": [
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer",
          "protoimpl.Pointer"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "public"
      },
      "ShowProfile": {
        "code": "func (c *usersClient) ShowProfile(ctx context.Context, in *ShowProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error) {\n\tout := new(ProfileResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/ShowProfile\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "ShowProfileRequest",
          "UnimplementedUsersServer",
          "ProfileResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "String": {
        "code": "func (x *User) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}",
        "is_file_function": true,
        "associated_struct": [
          "UpdateUserRequest_User",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UnfollowUser": {
        "code": "func (c *usersClient) UnfollowUser(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*ProfileResponse, error) {\n\tout := new(ProfileResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/UnfollowUser\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "UnfollowRequest",
          "UnimplementedUsersServer",
          "ProfileResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "string",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "Profile"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "UpdateUser": {
        "code": "func (c *usersClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {\n\tout := new(UserResponse)\n\terr := c.cc.Invoke(ctx, \"/user.Users/UpdateUser\", in, out, opts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "UpdateUserRequest",
          "UnimplementedUsersServer",
          "UserResponse",
          "error",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "UpdateUserRequest_User",
          "protoimpl.MessageState",
          "protoimpl.SizeCache",
          "protoimpl.UnknownFields",
          "User"
        ],
        "associated_func": [
          "new",
          "status.Errorf"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "_Users_CreateUser_Handler": {
        "code": "func _Users_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateUserRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).CreateUser(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/CreateUser\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).CreateUser(ctx, req.(*CreateUserRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "41954.0xc0001cfdd0.false",
          "context.Context",
          "func([41997.0xc0001cfe30.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "42059.0xc0001cfef0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Users_CurrentUser_Handler": {
        "code": "func _Users_CurrentUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(Empty)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).CurrentUser(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/CurrentUser\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).CurrentUser(ctx, req.(*Empty))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "42567.0xc00076d7a0.false",
          "context.Context",
          "func([42610.0xc00076da40.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "42672.0xc00076dc20.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Users_FollowUser_Handler": {
        "code": "func _Users_FollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(FollowRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).FollowUser(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/FollowUser\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).FollowUser(ctx, req.(*FollowRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "44388.0xc000015080.false",
          "context.Context",
          "func([44431.0xc0000150e0.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "44493.0xc0000151a0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Users_LoginUser_Handler": {
        "code": "func _Users_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(LoginUserRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).LoginUser(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/LoginUser\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).LoginUser(ctx, req.(*LoginUserRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "41347.0xc0001cf8c0.false",
          "context.Context",
          "func([41390.0xc0001cf920.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "41452.0xc0001cf9e0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Users_ShowProfile_Handler": {
        "code": "func _Users_ShowProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(ShowProfileRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).ShowProfile(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/ShowProfile\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).ShowProfile(ctx, req.(*ShowProfileRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "43771.0xc000014b70.false",
          "context.Context",
          "func([43814.0xc000014bd0.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "43876.0xc000014c90.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Users_UnfollowUser_Handler": {
        "code": "func _Users_UnfollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UnfollowRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).UnfollowUser(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/UnfollowUser\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).UnfollowUser(ctx, req.(*UnfollowRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "44994.0xc000015590.false",
          "context.Context",
          "func([45037.0xc0000155f0.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "45099.0xc0000156b0.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "_Users_UpdateUser_Handler": {
        "code": "func _Users_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateUserRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(UsersServer).UpdateUser(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: \"/user.Users/UpdateUser\",\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(UsersServer).UpdateUser(ctx, req.(*UpdateUserRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}",
        "is_file_function": true,
        "associated_struct": [
          "43158.0xc000014540.false",
          "context.Context",
          "func([43201.0xc000014660.false]) ([error])",
          "grpc.UnaryServerInterceptor",
          "43263.0xc000014720.false",
          "error"
        ],
        "associated_func": [
          "new",
          "dec",
          "interceptor"
        ],
        "dependent_files": [
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/interceptor.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "file_user_proto_init": {
        "code": "func file_user_proto_init() {\n\tif File_user_proto != nil {\n\t\treturn\n\t}\n\tfile_empty_proto_init()\n\tif !protoimpl.UnsafeEnabled {\n\t\tfile_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*User); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*Profile); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*LoginUserRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CreateUserRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UpdateUserRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*ShowProfileRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*FollowRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UnfollowRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UserResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*ProfileResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*LoginUserRequest_User); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*CreateUserRequest_User); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*UpdateUserRequest_User); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_user_proto_rawDesc,\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   13,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   1,\n\t\t},\n\t\tGoTypes:           file_user_proto_goTypes,\n\t\tDependencyIndexes: file_user_proto_depIdxs,\n\t\tMessageInfos:      file_user_proto_msgTypes,\n\t}.Build()\n\tFile_user_proto = out.File\n\tfile_user_proto_rawDesc = nil\n\tfile_user_proto_goTypes = nil\n\tfile_user_proto_depIdxs = nil\n}",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "file_empty_proto_init"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/empty.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      },
      "file_user_proto_rawDescGZIP": {
        "code": "func file_user_proto_rawDescGZIP() []byte {\n\tfile_user_proto_rawDescOnce.Do(func() {\n\t\tfile_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)\n\t})\n\treturn file_user_proto_rawDescData\n}",
        "is_file_function": true,
        "associated_struct": [
          "byte"
        ],
        "associated_func": null,
        "dependent_files": null,
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "init": {
        "code": "func init() { file_user_proto_init() }",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "file_user_proto_init"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "41347.0xc0001cf8c0.false": "",
      "41452.0xc0001cf9e0.false": "",
      "41954.0xc0001cfdd0.false": "",
      "42059.0xc0001cfef0.false": "",
      "42567.0xc00076d7a0.false": "",
      "42672.0xc00076dc20.false": "",
      "43158.0xc000014540.false": "",
      "43263.0xc000014720.false": "",
      "43771.0xc000014b70.false": "",
      "43876.0xc000014c90.false": "",
      "44388.0xc000015080.false": "",
      "44493.0xc0000151a0.false": "",
      "44994.0xc000015590.false": "",
      "45099.0xc0000156b0.false": "",
      "CreateUserRequest": "type CreateUserRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUser *CreateUserRequest_User `protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "CreateUserRequest_User": "type CreateUserRequest_User struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUsername string `protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tEmail    string `protobuf:\"bytes,2,opt,name=email,proto3\" json:\"email,omitempty\"`\n\tPassword string `protobuf:\"bytes,3,opt,name=password,proto3\" json:\"password,omitempty\"`\n}",
      "Empty": "type Empty struct {\n\tstate\t\tprotoimpl.MessageState\n\tsizeCache\tprotoimpl.SizeCache\n\tunknownFields\tprotoimpl.UnknownFields\n}",
      "FollowRequest": "type FollowRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUsername string `protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n}",
      "LoginUserRequest": "type LoginUserRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUser *LoginUserRequest_User `protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "LoginUserRequest_User": "type LoginUserRequest_User struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tEmail    string `protobuf:\"bytes,1,opt,name=email,proto3\" json:\"email,omitempty\"`\n\tPassword string `protobuf:\"bytes,2,opt,name=password,proto3\" json:\"password,omitempty\"`\n}",
      "Profile": "type Profile struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUsername  string `protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tBio       string `protobuf:\"bytes,2,opt,name=bio,proto3\" json:\"bio,omitempty\"`\n\tImage     string `protobuf:\"bytes,3,opt,name=image,proto3\" json:\"image,omitempty\"`\n\tFollowing bool   `protobuf:\"varint,4,opt,name=following,proto3\" json:\"following,omitempty\"`\n}",
      "ProfileResponse": "type ProfileResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tProfile *Profile `protobuf:\"bytes,1,opt,name=profile,proto3\" json:\"profile,omitempty\"`\n}",
      "ShowProfileRequest": "type ShowProfileRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUsername string `protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n}",
      "UnfollowRequest": "type UnfollowRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUsername string `protobuf:\"bytes,1,opt,name=username,proto3\" json:\"username,omitempty\"`\n}",
      "UnimplementedUsersServer": "type UnimplementedUsersServer struct {\n}",
      "UpdateUserRequest": "type UpdateUserRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUser *UpdateUserRequest_User `protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "UpdateUserRequest_User": "type UpdateUserRequest_User struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tEmail    string `protobuf:\"bytes,1,opt,name=email,proto3\" json:\"email,omitempty\"`\n\tPassword string `protobuf:\"bytes,2,opt,name=password,proto3\" json:\"password,omitempty\"`\n\tUsername string `protobuf:\"bytes,3,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tBio      string `protobuf:\"bytes,4,opt,name=bio,proto3\" json:\"bio,omitempty\"`\n\tImage    string `protobuf:\"bytes,5,opt,name=image,proto3\" json:\"image,omitempty\"`\n}",
      "User": "type User struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tEmail    string `protobuf:\"bytes,1,opt,name=email,proto3\" json:\"email,omitempty\"`\n\tToken    string `protobuf:\"bytes,2,opt,name=token,proto3\" json:\"token,omitempty\"`\n\tUsername string `protobuf:\"bytes,3,opt,name=username,proto3\" json:\"username,omitempty\"`\n\tBio      string `protobuf:\"bytes,4,opt,name=bio,proto3\" json:\"bio,omitempty\"`\n\tImage    string `protobuf:\"bytes,5,opt,name=image,proto3\" json:\"image,omitempty\"`\n}",
      "UserResponse": "type UserResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\tUser *User `protobuf:\"bytes,1,opt,name=user,proto3\" json:\"user,omitempty\"`\n}",
      "UsersClient": "type UsersClient interface {\n\tLoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*UserResponse, error)\n\tCreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)\n\tCurrentUser(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserResponse, error)\n\tUpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)\n\tShowProfile(ctx context.Context, in *ShowProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error)\n\tFollowUser(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*ProfileResponse, error)\n\tUnfollowUser(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*ProfileResponse, error)\n}",
      "UsersServer": "type UsersServer interface {\n\tLoginUser(context.Context, *LoginUserRequest) (*UserResponse, error)\n\tCreateUser(context.Context, *CreateUserRequest) (*UserResponse, error)\n\tCurrentUser(context.Context, *Empty) (*UserResponse, error)\n\tUpdateUser(context.Context, *UpdateUserRequest) (*UserResponse, error)\n\tShowProfile(context.Context, *ShowProfileRequest) (*ProfileResponse, error)\n\tFollowUser(context.Context, *FollowRequest) (*ProfileResponse, error)\n\tUnfollowUser(context.Context, *UnfollowRequest) (*ProfileResponse, error)\n}",
      "bool": "",
      "byte": "",
      "channelzData": "",
      "context.Context": "",
      "error": "",
      "func([41390.0xc0001cf920.false]) ([error])": "",
      "func([41997.0xc0001cfe30.false]) ([error])": "",
      "func([42610.0xc00076da40.false]) ([error])": "",
      "func([43201.0xc000014660.false]) ([error])": "",
      "func([43814.0xc000014bd0.false]) ([error])": "",
      "func([44431.0xc0000150e0.false]) ([error])": "",
      "func([45037.0xc0000155f0.false]) ([error])": "",
      "grpc.ClientConnInterface": "type ClientConnInterface interface {\n\tInvoke(ctx context.Context, method string, args interface{}, reply interface{}, opts ...CallOption) error\n\tNewStream(ctx context.Context, desc *StreamDesc, method string, opts ...CallOption) (ClientStream, error)\n}",
      "grpc.Server": "type Server struct {\n\topts\t\t\tserverOptions\n\tmu\t\t\tsync.Mutex\n\tlis\t\t\tmap[net.Listener]bool\n\tconns\t\t\tmap[transport.ServerTransport]bool\n\tserve\t\t\tbool\n\tdrain\t\t\tbool\n\tcv\t\t\t*sync.Cond\n\tm\t\t\tmap[string]*service\n\tevents\t\t\ttrace.EventLog\n\tquit\t\t\t*grpcsync.Event\n\tdone\t\t\t*grpcsync.Event\n\tchannelzRemoveOnce\tsync.Once\n\tserveWG\t\t\tsync.WaitGroup\n\tchannelzID\t\tint64\n\tczData\t\t\t*channelzData\n}",
      "grpc.UnaryServerInterceptor": "type UnaryServerInterceptor func(ctx context.Context, req interface{}, info *UnaryServerInfo, handler UnaryHandler) (resp interface{}, err error)",
      "grpcsync.Event": "",
      "int": "",
      "int64": "",
      "map[net.Listener]bool": "",
      "map[string]service": "",
      "map[transport.ServerTransport]bool": "",
      "protoimpl.MessageState": "type MessageState = impl.MessageState",
      "protoimpl.SizeCache": "type SizeCache = impl.SizeCache",
      "protoimpl.UnknownFields": "type UnknownFields = impl.UnknownFields",
      "protoreflect.Message": "type Message interface {\n\tDescriptor() MessageDescriptor\n\tType() MessageType\n\tNew() Message\n\tInterface() ProtoMessage\n\tRange(f func(FieldDescriptor, Value) bool)\n\tHas(FieldDescriptor) bool\n\tClear(FieldDescriptor)\n\tGet(FieldDescriptor) Value\n\tSet(FieldDescriptor, Value)\n\tMutable(FieldDescriptor) Value\n\tNewField(FieldDescriptor) Value\n\tWhichOneof(OneofDescriptor) FieldDescriptor\n\tGetUnknown() RawFields\n\tSetUnknown(RawFields)\n\tIsValid() bool\n\tProtoMethods() *methods\n}",
      "serverOptions": "",
      "string": "",
      "sync.Cond": "",
      "sync.Mutex": "",
      "sync.Once": "",
      "sync.WaitGroup": "",
      "trace.EventLog": "",
      "usersClient": "type usersClient struct {\n\tcc grpc.ClientConnInterface\n}",
      "x": ""
    },
    "package_dict": {
      "_": "google.golang.org/genproto/googleapis/api/annotations",
      "codes": "google.golang.org/grpc/codes",
      "grpc": "google.golang.org/grpc",
      "proto": "github.com/golang/protobuf/proto",
      "protoimpl": "google.golang.org/protobuf/runtime/protoimpl",
      "protoreflect": "google.golang.org/protobuf/reflect/protoreflect",
      "status": "google.golang.org/grpc/status"
    },
    "package_name": "proto",
    "imports": "import (\n\tcontext \"context\"\n\tproto \"github.com/golang/protobuf/proto\"\n\t_ \"google.golang.org/genproto/googleapis/api/annotations\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\treflect \"reflect\"\n\tsync \"sync\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go": {
    "function_dict": {
      "RegisterUsersHandler": {
        "code": "func RegisterUsersHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {\n\treturn RegisterUsersHandlerClient(ctx, mux, NewUsersClient(conn))\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "grpc.ClientConn",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool",
          "context.Context",
          "context.CancelFunc",
          "string",
          "resolver.Target",
          "string",
          "dialOptions",
          "connectivityStateManager",
          "balancer.BuildOptions",
          "pickerWrapper",
          "sync.RWMutex",
          "ccResolverWrapper",
          "ServiceConfig",
          "map[addrConn]16806.0xc00068fd70.false",
          "keepalive.ClientParameters",
          "string",
          "ccBalancerWrapper",
          "atomic.Value",
          "grpcsync.Event",
          "int64",
          "channelzData"
        ],
        "associated_func": [
          "RegisterUsersHandlerClient",
          "NewUsersClient"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/clientconn.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterUsersHandlerClient": {
        "code": "func RegisterUsersHandlerClient(ctx context.Context, mux *runtime.ServeMux, client UsersClient) error {\n\n\tmux.Handle(\"POST\", pattern_Users_LoginUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_LoginUser_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_LoginUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Users_CreateUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_CreateUser_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_CreateUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Users_CurrentUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_CurrentUser_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_CurrentUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"PUT\", pattern_Users_UpdateUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_UpdateUser_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_UpdateUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Users_ShowProfile_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_ShowProfile_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_ShowProfile_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Users_FollowUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_FollowUser_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_FollowUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"DELETE\", pattern_Users_UnfollowUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := request_Users_UnfollowUser_0(rctx, inboundMarshaler, client, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_UnfollowUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "UsersClient",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool"
        ],
        "associated_func": [
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_LoginUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_LoginUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_CreateUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_CreateUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_CurrentUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_CurrentUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_UpdateUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_UpdateUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_ShowProfile_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_ShowProfile_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_FollowUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_FollowUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateContext",
          "runtime.HTTPError",
          "request_Users_UnfollowUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_UnfollowUser_0"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterUsersHandlerFromEndpoint": {
        "code": "func RegisterUsersHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {\n\tconn, err := grpc.Dial(endpoint, opts...)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer func() {\n\t\tif err != nil {\n\t\t\tif cerr := conn.Close(); cerr != nil {\n\t\t\t\tgrpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tgo func() {\n\t\t\t<-ctx.Done()\n\t\t\tif cerr := conn.Close(); cerr != nil {\n\t\t\t\tgrpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)\n\t\t\t}\n\t\t}()\n\t}()\n\n\treturn RegisterUsersHandler(ctx, mux, conn)\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "string",
          "grpc.DialOption",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool"
        ],
        "associated_func": [
          "grpc.Dial",
          "grpclog.Infof",
          "grpclog.Infof",
          "RegisterUsersHandler"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/dialoptions.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/clientconn.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/grpclog/grpclog.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/grpclog/grpclog.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "RegisterUsersHandlerServer": {
        "code": "func RegisterUsersHandlerServer(ctx context.Context, mux *runtime.ServeMux, server UsersServer) error {\n\n\tmux.Handle(\"POST\", pattern_Users_LoginUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_LoginUser_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_LoginUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Users_CreateUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_CreateUser_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_CreateUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Users_CurrentUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_CurrentUser_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_CurrentUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"PUT\", pattern_Users_UpdateUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_UpdateUser_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_UpdateUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"GET\", pattern_Users_ShowProfile_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_ShowProfile_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_ShowProfile_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"POST\", pattern_Users_FollowUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_FollowUser_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_FollowUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\tmux.Handle(\"DELETE\", pattern_Users_UnfollowUser_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {\n\t\tctx, cancel := context.WithCancel(req.Context())\n\t\tdefer cancel()\n\t\tinboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)\n\t\trctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\t\tresp, md, err := local_request_Users_UnfollowUser_0(rctx, inboundMarshaler, server, req, pathParams)\n\t\tctx = runtime.NewServerMetadataContext(ctx, md)\n\t\tif err != nil {\n\t\t\truntime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)\n\t\t\treturn\n\t\t}\n\n\t\tforward_Users_UnfollowUser_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)\n\n\t})\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.ServeMux",
          "UsersServer",
          "error",
          "map[string]handler",
          "func([context.Context http.ResponseWriter proto.Message]) ([error])",
          "marshalerRegistry",
          "HeaderMatcherFunc",
          "HeaderMatcherFunc",
          "func([context.Context http.Request]) ([metadata.MD])",
          "StreamErrorHandlerFunc",
          "ProtoErrorHandlerFunc",
          "bool",
          "bool"
        ],
        "associated_func": [
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_LoginUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_LoginUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_CreateUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_CreateUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_CurrentUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_CurrentUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_UpdateUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_UpdateUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_ShowProfile_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_ShowProfile_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_FollowUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_FollowUser_0",
          "cancel",
          "runtime.MarshalerForRequest",
          "runtime.AnnotateIncomingContext",
          "runtime.HTTPError",
          "local_request_Users_UnfollowUser_0",
          "runtime.NewServerMetadataContext",
          "runtime.HTTPError",
          "forward_Users_UnfollowUser_0"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/mux.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler_registry.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.gw.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "local_request_Users_CreateUser_0": {
        "code": "func local_request_Users_CreateUser_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq CreateUserRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := server.CreateUser(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Users_CurrentUser_0": {
        "code": "func local_request_Users_CurrentUser_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq Empty\n\tvar metadata runtime.ServerMetadata\n\n\tmsg, err := server.CurrentUser(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Users_FollowUser_0": {
        "code": "func local_request_Users_FollowUser_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq FollowRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"username\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"username\")\n\t}\n\n\tprotoReq.Username, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"username\", err)\n\t}\n\n\tmsg, err := server.FollowUser(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Users_LoginUser_0": {
        "code": "func local_request_Users_LoginUser_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq LoginUserRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := server.LoginUser(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Users_ShowProfile_0": {
        "code": "func local_request_Users_ShowProfile_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq ShowProfileRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"username\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"username\")\n\t}\n\n\tprotoReq.Username, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"username\", err)\n\t}\n\n\tmsg, err := server.ShowProfile(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Users_UnfollowUser_0": {
        "code": "func local_request_Users_UnfollowUser_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UnfollowRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"username\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"username\")\n\t}\n\n\tprotoReq.Username, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"username\", err)\n\t}\n\n\tmsg, err := server.UnfollowUser(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "local_request_Users_UpdateUser_0": {
        "code": "func local_request_Users_UpdateUser_0(ctx context.Context, marshaler runtime.Marshaler, server UsersServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UpdateUserRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := server.UpdateUser(ctx, &protoReq)\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersServer",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_CreateUser_0": {
        "code": "func request_Users_CreateUser_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq CreateUserRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := client.CreateUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_CurrentUser_0": {
        "code": "func request_Users_CurrentUser_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq Empty\n\tvar metadata runtime.ServerMetadata\n\n\tmsg, err := client.CurrentUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_FollowUser_0": {
        "code": "func request_Users_FollowUser_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq FollowRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"username\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"username\")\n\t}\n\n\tprotoReq.Username, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"username\", err)\n\t}\n\n\tmsg, err := client.FollowUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_LoginUser_0": {
        "code": "func request_Users_LoginUser_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq LoginUserRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := client.LoginUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_ShowProfile_0": {
        "code": "func request_Users_ShowProfile_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq ShowProfileRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"username\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"username\")\n\t}\n\n\tprotoReq.Username, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"username\", err)\n\t}\n\n\tmsg, err := client.ShowProfile(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_UnfollowUser_0": {
        "code": "func request_Users_UnfollowUser_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UnfollowRequest\n\tvar metadata runtime.ServerMetadata\n\n\tvar (\n\t\tval string\n\t\tok  bool\n\t\terr error\n\t\t_   = err\n\t)\n\n\tval, ok = pathParams[\"username\"]\n\tif !ok {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"username\")\n\t}\n\n\tprotoReq.Username, err = runtime.String(val)\n\n\tif err != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"username\", err)\n\t}\n\n\tmsg, err := client.UnfollowUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "status.Errorf",
          "runtime.String",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/convert.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      },
      "request_Users_UpdateUser_0": {
        "code": "func request_Users_UpdateUser_0(ctx context.Context, marshaler runtime.Marshaler, client UsersClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {\n\tvar protoReq UpdateUserRequest\n\tvar metadata runtime.ServerMetadata\n\n\tnewReader, berr := utilities.IOReaderFactory(req.Body)\n\tif berr != nil {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)\n\t}\n\tif err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {\n\t\treturn nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)\n\t}\n\n\tmsg, err := client.UpdateUser(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))\n\treturn msg, metadata, err\n\n}",
        "is_file_function": true,
        "associated_struct": [
          "context.Context",
          "runtime.Marshaler",
          "UsersClient",
          "http.Request",
          "map[string]string",
          "proto.Message",
          "runtime.ServerMetadata",
          "error",
          "metadata.MD",
          "metadata.MD"
        ],
        "associated_func": [
          "utilities.IOReaderFactory",
          "status.Errorf",
          "newReader",
          "status.Errorf",
          "grpc.Header",
          "grpc.Trailer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/marshaler.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/go/pkg/mod/github.com/golang/protobuf@v1.4.0/proto/proto.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/runtime/context.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.14.4/utilities/readerfactory.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/status/status.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/rpc_util.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "private"
      }
    },
    "struct_dict": {
      "HeaderMatcherFunc": "",
      "ProtoErrorHandlerFunc": "",
      "ServiceConfig": "",
      "StreamErrorHandlerFunc": "",
      "UsersClient": "type UsersClient interface {\n\tLoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*UserResponse, error)\n\tCreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)\n\tCurrentUser(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*UserResponse, error)\n\tUpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)\n\tShowProfile(ctx context.Context, in *ShowProfileRequest, opts ...grpc.CallOption) (*ProfileResponse, error)\n\tFollowUser(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*ProfileResponse, error)\n\tUnfollowUser(ctx context.Context, in *UnfollowRequest, opts ...grpc.CallOption) (*ProfileResponse, error)\n}",
      "UsersServer": "type UsersServer interface {\n\tLoginUser(context.Context, *LoginUserRequest) (*UserResponse, error)\n\tCreateUser(context.Context, *CreateUserRequest) (*UserResponse, error)\n\tCurrentUser(context.Context, *Empty) (*UserResponse, error)\n\tUpdateUser(context.Context, *UpdateUserRequest) (*UserResponse, error)\n\tShowProfile(context.Context, *ShowProfileRequest) (*ProfileResponse, error)\n\tFollowUser(context.Context, *FollowRequest) (*ProfileResponse, error)\n\tUnfollowUser(context.Context, *UnfollowRequest) (*ProfileResponse, error)\n}",
      "atomic.Value": "",
      "balancer.BuildOptions": "",
      "bool": "",
      "ccBalancerWrapper": "",
      "ccResolverWrapper": "",
      "channelzData": "",
      "connectivityStateManager": "",
      "context.CancelFunc": "",
      "context.Context": "",
      "dialOptions": "",
      "error": "",
      "func([context.Context http.Request]) ([metadata.MD])": "",
      "func([context.Context http.ResponseWriter proto.Message]) ([error])": "",
      "grpc.ClientConn": "type ClientConn struct {\n\tctx\t\t\tcontext.Context\n\tcancel\t\t\tcontext.CancelFunc\n\ttarget\t\t\tstring\n\tparsedTarget\t\tresolver.Target\n\tauthority\t\tstring\n\tdopts\t\t\tdialOptions\n\tcsMgr\t\t\t*connectivityStateManager\n\tbalancerBuildOpts\tbalancer.BuildOptions\n\tblockingpicker\t\t*pickerWrapper\n\tmu\t\t\tsync.RWMutex\n\tresolverWrapper\t\t*ccResolverWrapper\n\tsc\t\t\t*ServiceConfig\n\tconns\t\t\tmap[*addrConn]struct{}\n\tmkp\t\t\tkeepalive.ClientParameters\n\tcurBalancerName\t\tstring\n\tbalancerWrapper\t\t*ccBalancerWrapper\n\tretryThrottler\t\tatomic.Value\n\tfirstResolveEvent\t*grpcsync.Event\n\tchannelzID\t\tint64\n\tczData\t\t\t*channelzData\n}",
      "grpc.DialOption": "type DialOption interface{ apply(*dialOptions) }",
      "grpcsync.Event": "",
      "http.Request": "",
      "int64": "",
      "keepalive.ClientParameters": "",
      "map[addrConn]16806.0xc00068fd70.false": "",
      "map[string]handler": "",
      "map[string]string": "",
      "marshalerRegistry": "",
      "metadata.MD": "",
      "pickerWrapper": "",
      "proto.Message": "type Message = protoiface.MessageV1",
      "resolver.Target": "",
      "runtime.Marshaler": "type Marshaler interface {\n\tMarshal(v interface{}) ([]byte, error)\n\tUnmarshal(data []byte, v interface{}) error\n\tNewDecoder(r io.Reader) Decoder\n\tNewEncoder(w io.Writer) Encoder\n\tContentType() string\n}",
      "runtime.ServeMux": "type ServeMux struct {\n\thandlers\t\t\tmap[string][]handler\n\tforwardResponseOptions\t\t[]func(context.Context, http.ResponseWriter, proto.Message) error\n\tmarshalers\t\t\tmarshalerRegistry\n\tincomingHeaderMatcher\t\tHeaderMatcherFunc\n\toutgoingHeaderMatcher\t\tHeaderMatcherFunc\n\tmetadataAnnotators\t\t[]func(context.Context, *http.Request) metadata.MD\n\tstreamErrorHandler\t\tStreamErrorHandlerFunc\n\tprotoErrorHandler\t\tProtoErrorHandlerFunc\n\tdisablePathLengthFallback\tbool\n\tlastMatchWins\t\t\tbool\n}",
      "runtime.ServerMetadata": "type ServerMetadata struct {\n\tHeaderMD\tmetadata.MD\n\tTrailerMD\tmetadata.MD\n}",
      "string": "",
      "sync.RWMutex": ""
    },
    "package_dict": {
      "codes": "google.golang.org/grpc/codes",
      "descriptor": "github.com/golang/protobuf/descriptor",
      "grpc": "google.golang.org/grpc",
      "grpclog": "google.golang.org/grpc/grpclog",
      "proto": "github.com/golang/protobuf/proto",
      "runtime": "github.com/grpc-ecosystem/grpc-gateway/runtime",
      "status": "google.golang.org/grpc/status",
      "utilities": "github.com/grpc-ecosystem/grpc-gateway/utilities"
    },
    "package_name": "proto",
    "imports": "import (\n\t\"context\"\n\t\"io\"\n\t\"net/http\"\n\t\"github.com/golang/protobuf/descriptor\"\n\t\"github.com/golang/protobuf/proto\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/runtime\"\n\t\"github.com/grpc-ecosystem/grpc-gateway/utilities\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/grpclog\"\n\t\"google.golang.org/grpc/status\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/server.go": {
    "function_dict": {
      "main": {
        "code": "func main() {\n\tw := zerolog.ConsoleWriter{Out: os.Stderr}\n\tl := zerolog.New(w).With().Timestamp().Caller().Logger()\n\n\td, err := db.New()\n\tif err != nil {\n\t\terr = fmt.Errorf(\"failed to connect database: %w\", err)\n\t\tl.Fatal().Err(err).Msg(\"failed to connect the database\")\n\t}\n\tl.Info().Str(\"name\", d.Dialect().GetName()).\n\t\tStr(\"database\", d.Dialect().CurrentDatabase()).\n\t\tMsg(\"succeeded to connect to the database\")\n\n\terr = db.AutoMigrate(d)\n\tif err != nil {\n\t\tl.Fatal().Err(err).Msg(\"failed to migrate database\")\n\t}\n\n\tus := store.NewUserStore(d)\n\tas := store.NewArticleStore(d)\n\n\th := handler.New(&l, us, as)\n\n\tlis, err := net.Listen(\"tcp\", port)\n\tif err != nil {\n\t\tl.Panic().Err(fmt.Errorf(\"failed to listen: %w\", err))\n\t}\n\n\ts := grpc.NewServer(\n\t\tgrpc_middleware.WithUnaryServerChain(\n\t\t\tgrpc_recovery.UnaryServerInterceptor(),\n\t\t),\n\t)\n\tpb.RegisterUsersServer(s, h)\n\tpb.RegisterArticlesServer(s, h)\n\tl.Info().Str(\"port\", port).Msg(\"starting server\")\n\tif err := s.Serve(lis); err != nil {\n\t\tl.Panic().Err(fmt.Errorf(\"failed to serve: %w\", err))\n\t}\n}",
        "is_file_function": true,
        "associated_struct": null,
        "associated_func": [
          "zerolog.New",
          "db.New",
          "db.AutoMigrate",
          "store.NewUserStore",
          "store.NewArticleStore",
          "handler.New",
          "grpc.NewServer",
          "grpc_middleware.WithUnaryServerChain",
          "grpc_recovery.UnaryServerInterceptor",
          "pb.RegisterUsersServer",
          "pb.RegisterArticlesServer"
        ],
        "dependent_files": [
          "/go/pkg/mod/github.com/rs/zerolog@v1.18.0/log.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/db/db.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/handler/handler.go",
          "/go/pkg/mod/google.golang.org/grpc@v1.28.1/server.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.2.0/chain.go",
          "/go/pkg/mod/github.com/grpc-ecosystem/go-grpc-middleware@v1.2.0/recovery/interceptors.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/user.pb.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/proto/article.pb.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": false,
        "access_modifier": "private"
      }
    },
    "struct_dict": {},
    "package_dict": {
      "_": "github.com/go-sql-driver/mysql",
      "db": "github.com/raahii/golang-grpc-realworld-example/db",
      "grpc": "google.golang.org/grpc",
      "grpc_middleware": "github.com/grpc-ecosystem/go-grpc-middleware",
      "grpc_recovery": "github.com/grpc-ecosystem/go-grpc-middleware/recovery",
      "handler": "github.com/raahii/golang-grpc-realworld-example/handler",
      "pb": "github.com/raahii/golang-grpc-realworld-example/proto",
      "store": "github.com/raahii/golang-grpc-realworld-example/store",
      "zerolog": "github.com/rs/zerolog"
    },
    "package_name": "main",
    "imports": "import (\n\t\"fmt\"\n\t\"net\"\n\t\"os\"\n\t_ \"github.com/go-sql-driver/mysql\"\n\tgrpc_middleware \"github.com/grpc-ecosystem/go-grpc-middleware\"\n\tgrpc_recovery \"github.com/grpc-ecosystem/go-grpc-middleware/recovery\"\n\t\"github.com/raahii/golang-grpc-realworld-example/db\"\n\t\"github.com/raahii/golang-grpc-realworld-example/handler\"\n\tpb \"github.com/raahii/golang-grpc-realworld-example/proto\"\n\t\"github.com/raahii/golang-grpc-realworld-example/store\"\n\t\"github.com/rs/zerolog\"\n\t\"google.golang.org/grpc\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go": {
    "function_dict": {
      "AddFavorite": {
        "code": "func (s *ArticleStore) AddFavorite(a *model.Article, u *model.User) error {\n\ttx := s.db.Begin()\n\n\terr := tx.Model(a).Association(\"FavoritedUsers\").\n\t\tAppend(u).Error\n\tif err != nil {\n\t\ttx.Rollback()\n\t\treturn err\n\t}\n\n\terr = tx.Model(a).\n\t\tUpdate(\"favorites_count\", gorm.Expr(\"favorites_count + ?\", 1)).Error\n\tif err != nil {\n\t\ttx.Rollback()\n\t\treturn err\n\t}\n\n\ttx.Commit()\n\ta.FavoritesCount++\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "model.User",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": [
          "gorm.Expr"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/utils.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Create": {
        "code": "func (s *ArticleStore) Create(m *model.Article) error {\n\treturn s.db.Create(&m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "CreateComment": {
        "code": "func (s *ArticleStore) CreateComment(m *model.Comment) error {\n\treturn s.db.Create(&m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Comment",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "uint",
          "User",
          "uint",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Delete": {
        "code": "func (s *ArticleStore) Delete(m *model.Article) error {\n\treturn s.db.Delete(m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DeleteComment": {
        "code": "func (s *ArticleStore) DeleteComment(m *model.Comment) error {\n\treturn s.db.Delete(m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Comment",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "uint",
          "User",
          "uint",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "DeleteFavorite": {
        "code": "func (s *ArticleStore) DeleteFavorite(a *model.Article, u *model.User) error {\n\ttx := s.db.Begin()\n\n\terr := tx.Model(a).Association(\"FavoritedUsers\").\n\t\tDelete(u).Error\n\tif err != nil {\n\t\ttx.Rollback()\n\t\treturn err\n\t}\n\n\terr = tx.Model(a).\n\t\tUpdate(\"favorites_count\", gorm.Expr(\"favorites_count - ?\", 1)).Error\n\tif err != nil {\n\t\ttx.Rollback()\n\t\treturn err\n\t}\n\n\ttx.Commit()\n\ta.FavoritesCount--\n\n\treturn nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "model.User",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": [
          "gorm.Expr"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/utils.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetArticles": {
        "code": "func (s *ArticleStore) GetArticles(tagName, username string, favoritedBy *model.User, limit, offset int64) ([]model.Article, error) {\n\td := s.db.Preload(\"Author\")\n\n\tif username != \"\" {\n\t\td = d.Joins(\"join users on articles.user_id = users.id\").\n\t\t\tWhere(\"users.username = ?\", username)\n\t}\n\n\tif tagName != \"\" {\n\t\td = d.Joins(\n\t\t\t\"join article_tags on articles.id = article_tags.article_id \"+\n\t\t\t\t\"join tags on tags.id = article_tags.tag_id\").\n\t\t\tWhere(\"tags.name = ?\", tagName)\n\t}\n\n\tif favoritedBy != nil {\n\t\trows, err := s.db.Select(\"article_id\").\n\t\t\tTable(\"favorite_articles\").\n\t\t\tWhere(\"user_id = ?\", favoritedBy.ID).\n\t\t\tOffset(offset).Limit(limit).Rows()\n\t\tif err != nil {\n\t\t\treturn []model.Article{}, err\n\t\t}\n\t\tdefer rows.Close()\n\n\t\tvar ids []uint\n\t\tfor rows.Next() {\n\t\t\tvar id uint\n\t\t\trows.Scan(&id)\n\t\t\tids = append(ids, id)\n\t\t}\n\t\td = d.Where(\"id in (?)\", ids)\n\t}\n\n\td = d.Offset(offset).Limit(limit)\n\n\tvar as []model.Article\n\terr := d.Find(&as).Error\n\n\treturn as, err\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "model.User",
          "int64",
          "ArticleStore",
          "model.Article",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment"
        ],
        "associated_func": [
          "append"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetByID": {
        "code": "func (s *ArticleStore) GetByID(id uint) (*model.Article, error) {\n\tvar m model.Article\n\terr := s.db.Preload(\"Tags\").Preload(\"Author\").Find(&m, id).Error\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &m, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "ArticleStore",
          "model.Article",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetCommentByID": {
        "code": "func (s *ArticleStore) GetCommentByID(id uint) (*model.Comment, error) {\n\tvar m model.Comment\n\terr := s.db.Find(&m, id).Error\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &m, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "ArticleStore",
          "model.Comment",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string",
          "uint",
          "User",
          "uint",
          "Article"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetComments": {
        "code": "func (s *ArticleStore) GetComments(m *model.Article) ([]model.Comment, error) {\n\tvar cs []model.Comment\n\terr := s.db.Preload(\"Author\").\n\t\tWhere(\"article_id = ?\", m.ID).\n\t\tFind(&cs).Error\n\tif err != nil {\n\t\treturn cs, err\n\t}\n\treturn cs, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "ArticleStore",
          "model.Comment",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.DB",
          "gorm.Model",
          "string",
          "uint",
          "User",
          "uint",
          "Article"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/comment.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFeedArticles": {
        "code": "func (s *ArticleStore) GetFeedArticles(userIDs []uint, limit, offset int64) ([]model.Article, error) {\n\td := s.db.Preload(\"Author\").\n\t\tWhere(\"user_id in (?)\", userIDs)\n\n\td = d.Offset(offset).Limit(limit)\n\n\tvar as []model.Article\n\terr := d.Find(&as).Error\n\n\treturn as, err\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "int64",
          "ArticleStore",
          "model.Article",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetTags": {
        "code": "func (s *ArticleStore) GetTags() ([]model.Tag, error) {\n\tvar tags []model.Tag\n\tif err := s.db.Find(&tags).Error; err != nil {\n\t\treturn tags, err\n\t}\n\treturn tags, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "ArticleStore",
          "model.Tag",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/model.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "IsFavorited": {
        "code": "func (s *ArticleStore) IsFavorited(a *model.Article, u *model.User) (bool, error) {\n\tif a == nil || u == nil {\n\t\treturn false, nil\n\t}\n\n\tvar count int\n\terr := s.db.Table(\"favorite_articles\").\n\t\tWhere(\"article_id = ? AND user_id = ?\", a.ID, u.ID).\n\t\tCount(&count).Error\n\tif err != nil {\n\t\treturn false, err\n\t}\n\n\treturn count > 0, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "model.User",
          "ArticleStore",
          "bool",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "NewArticleStore": {
        "code": "func NewArticleStore(db *gorm.DB) *ArticleStore {\n\treturn &ArticleStore{\n\t\tdb: db,\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "ArticleStore",
          "sync.RWMutex",
          "207.0xc00076ef90.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Update": {
        "code": "func (s *ArticleStore) Update(m *model.Article) error {\n\treturn s.db.Model(&m).Update(&m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.Article",
          "ArticleStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "Tag",
          "User",
          "uint",
          "int32",
          "User",
          "Comment",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/article.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/article.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "207.0xc00076ef90.false": "",
      "Article": "",
      "ArticleStore": "type ArticleStore struct {\n\tdb *gorm.DB\n}",
      "Callback": "",
      "Comment": "",
      "DB": "",
      "Dialect": "",
      "SQLCommon": "",
      "Tag": "",
      "User": "",
      "bool": "",
      "error": "",
      "func() ([time.Time])": "",
      "gorm.DB": "type DB struct {\n\tsync.RWMutex\n\tValue\t\t\tinterface{}\n\tError\t\t\terror\n\tRowsAffected\t\tint64\n\tdb\t\t\tSQLCommon\n\tblockGlobalUpdate\tbool\n\tlogMode\t\t\tlogModeValue\n\tlogger\t\t\tlogger\n\tsearch\t\t\t*search\n\tvalues\t\t\tsync.Map\n\tparent\t\t\t*DB\n\tcallbacks\t\t*Callback\n\tdialect\t\t\tDialect\n\tsingularTable\t\tbool\n\tnowFuncOverride\t\tfunc() time.Time\n}",
      "gorm.Model": "type Model struct {\n\tID\t\tuint\t`gorm:\"primary_key\"`\n\tCreatedAt\ttime.Time\n\tUpdatedAt\ttime.Time\n\tDeletedAt\t*time.Time\t`sql:\"index\"`\n}",
      "int32": "",
      "int64": "",
      "logModeValue": "",
      "logger": "",
      "model.Article": "type Article struct {\n\tgorm.Model\n\tTitle\t\tstring\t`gorm:\"not null\"`\n\tDescription\tstring\t`gorm:\"not null\"`\n\tBody\t\tstring\t`gorm:\"not null\"`\n\tTags\t\t[]Tag\t`gorm:\"many2many:article_tags\"`\n\tAuthor\t\tUser\t`gorm:\"foreignkey:UserID\"`\n\tUserID\t\tuint\t`gorm:\"not null\"`\n\tFavoritesCount\tint32\t`gorm:\"not null;default=0\"`\n\tFavoritedUsers\t[]User\t`gorm:\"many2many:favorite_articles\"`\n\tComments\t[]Comment\n}",
      "model.Comment": "type Comment struct {\n\tgorm.Model\n\tBody\t\tstring\t`gorm:\"not null\"`\n\tUserID\t\tuint\t`gorm:\"not null\"`\n\tAuthor\t\tUser\t`gorm:\"foreignkey:UserID\"`\n\tArticleID\tuint\t`gorm:\"not null\"`\n\tArticle\t\tArticle\n}",
      "model.Tag": "type Tag struct {\n\tgorm.Model\n\tName\tstring\t`gorm:\"not null\"`\n}",
      "model.User": "type User struct {\n\tgorm.Model\n\tUsername\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tEmail\t\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tPassword\t\tstring\t\t`gorm:\"not null\"`\n\tBio\t\t\tstring\t\t`gorm:\"not null\"`\n\tImage\t\t\tstring\t\t`gorm:\"not null\"`\n\tFollows\t\t\t[]User\t\t`gorm:\"many2many:follows;jointable_foreignkey:from_user_id;association_jointable_foreignkey:to_user_id\"`\n\tFavoriteArticles\t[]Article\t`gorm:\"many2many:favorite_articles;\"`\n}",
      "search": "",
      "string": "",
      "sync.Map": "",
      "sync.RWMutex": "",
      "uint": ""
    },
    "package_dict": {
      "gorm": "github.com/jinzhu/gorm",
      "model": "github.com/raahii/golang-grpc-realworld-example/model"
    },
    "package_name": "store",
    "imports": "import (\n\t\"github.com/jinzhu/gorm\"\n\t\"github.com/raahii/golang-grpc-realworld-example/model\"\n)\n"
  },
  "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go": {
    "function_dict": {
      "Create": {
        "code": "func (s *UserStore) Create(m *model.User) error {\n\treturn s.db.Create(m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.User",
          "UserStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Follow": {
        "code": "func (s *UserStore) Follow(a *model.User, b *model.User) error {\n\treturn s.db.Model(a).Association(\"Follows\").Append(b).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.User",
          "model.User",
          "UserStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetByEmail": {
        "code": "func (s *UserStore) GetByEmail(email string) (*model.User, error) {\n\tvar m model.User\n\tif err := s.db.Where(\"email = ?\", email).First(&m).Error; err != nil {\n\t\treturn nil, err\n\t}\n\treturn &m, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "UserStore",
          "model.User",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetByID": {
        "code": "func (s *UserStore) GetByID(id uint) (*model.User, error) {\n\tvar m model.User\n\tif err := s.db.Find(&m, id).Error; err != nil {\n\t\treturn nil, err\n\t}\n\treturn &m, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "uint",
          "UserStore",
          "model.User",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/model.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetByUsername": {
        "code": "func (s *UserStore) GetByUsername(username string) (*model.User, error) {\n\tvar m model.User\n\tif err := s.db.Where(\"username = ?\", username).First(&m).Error; err != nil {\n\t\treturn nil, err\n\t}\n\treturn &m, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "string",
          "UserStore",
          "model.User",
          "error",
          "gorm.DB",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "GetFollowingUserIDs": {
        "code": "func (s *UserStore) GetFollowingUserIDs(m *model.User) ([]uint, error) {\n\trows, err := s.db.Table(\"follows\").\n\t\tSelect(\"to_user_id\").\n\t\tWhere(\"from_user_id = ?\", m.ID).\n\t\tRows()\n\tif err != nil {\n\t\treturn []uint{}, err\n\t}\n\tdefer rows.Close()\n\n\tvar ids []uint\n\tfor rows.Next() {\n\t\tvar id uint\n\t\trows.Scan(&id)\n\t\tids = append(ids, id)\n\t}\n\n\treturn ids, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.User",
          "UserStore",
          "uint",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": [
          "append"
        ],
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "IsFollowing": {
        "code": "func (s *UserStore) IsFollowing(a *model.User, b *model.User) (bool, error) {\n\tif a == nil || b == nil {\n\t\treturn false, nil\n\t}\n\n\tvar count int\n\terr := s.db.Table(\"follows\").\n\t\tWhere(\"from_user_id = ? AND to_user_id = ?\", a.ID, b.ID).\n\t\tCount(&count).Error\n\tif err != nil {\n\t\treturn false, err\n\t}\n\n\treturn count > 0, nil\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.User",
          "model.User",
          "UserStore",
          "bool",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "NewUserStore": {
        "code": "func NewUserStore(db *gorm.DB) *UserStore {\n\treturn &UserStore{\n\t\tdb: db,\n\t}\n}",
        "is_file_function": true,
        "associated_struct": [
          "gorm.DB",
          "UserStore",
          "sync.RWMutex",
          "207.0xc000999980.false",
          "error",
          "int64",
          "SQLCommon",
          "bool",
          "logModeValue",
          "logger",
          "search",
          "sync.Map",
          "DB",
          "Callback",
          "Dialect",
          "bool",
          "func() ([time.Time])",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/go/pkg/mod/github.com/jinzhu/gorm@v1.9.12/main.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Unfollow": {
        "code": "func (s *UserStore) Unfollow(a *model.User, b *model.User) error {\n\treturn s.db.Model(a).Association(\"Follows\").Delete(b).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.User",
          "model.User",
          "UserStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      },
      "Update": {
        "code": "func (s *UserStore) Update(m *model.User) error {\n\treturn s.db.Model(m).Update(m).Error\n}",
        "is_file_function": true,
        "associated_struct": [
          "model.User",
          "UserStore",
          "error",
          "gorm.Model",
          "string",
          "string",
          "string",
          "string",
          "string",
          "User",
          "Article",
          "gorm.DB"
        ],
        "associated_func": null,
        "dependent_files": [
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/model/user.go",
          "/var/tmp/Roost/RoostGPT/golang-grpc-realworld-example/58ed40cc-365e-4b52-ab35-f326c7f72ac3/source/golang-grpc-realworld-example/store/user.go"
        ],
        "test_exists": false,
        "test_functions": {},
        "requires_test": true,
        "access_modifier": "public"
      }
    },
    "struct_dict": {
      "207.0xc000999980.false": "",
      "Article": "",
      "Callback": "",
      "DB": "",
      "Dialect": "",
      "SQLCommon": "",
      "User": "",
      "UserStore": "type UserStore struct {\n\tdb *gorm.DB\n}",
      "bool": "",
      "error": "",
      "func() ([time.Time])": "",
      "gorm.DB": "type DB struct {\n\tsync.RWMutex\n\tValue\t\t\tinterface{}\n\tError\t\t\terror\n\tRowsAffected\t\tint64\n\tdb\t\t\tSQLCommon\n\tblockGlobalUpdate\tbool\n\tlogMode\t\t\tlogModeValue\n\tlogger\t\t\tlogger\n\tsearch\t\t\t*search\n\tvalues\t\t\tsync.Map\n\tparent\t\t\t*DB\n\tcallbacks\t\t*Callback\n\tdialect\t\t\tDialect\n\tsingularTable\t\tbool\n\tnowFuncOverride\t\tfunc() time.Time\n}",
      "gorm.Model": "type Model struct {\n\tID\t\tuint\t`gorm:\"primary_key\"`\n\tCreatedAt\ttime.Time\n\tUpdatedAt\ttime.Time\n\tDeletedAt\t*time.Time\t`sql:\"index\"`\n}",
      "int64": "",
      "logModeValue": "",
      "logger": "",
      "model.User": "type User struct {\n\tgorm.Model\n\tUsername\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tEmail\t\t\tstring\t\t`gorm:\"unique_index;not null\"`\n\tPassword\t\tstring\t\t`gorm:\"not null\"`\n\tBio\t\t\tstring\t\t`gorm:\"not null\"`\n\tImage\t\t\tstring\t\t`gorm:\"not null\"`\n\tFollows\t\t\t[]User\t\t`gorm:\"many2many:follows;jointable_foreignkey:from_user_id;association_jointable_foreignkey:to_user_id\"`\n\tFavoriteArticles\t[]Article\t`gorm:\"many2many:favorite_articles;\"`\n}",
      "search": "",
      "string": "",
      "sync.Map": "",
      "sync.RWMutex": "",
      "uint": ""
    },
    "package_dict": {
      "gorm": "github.com/jinzhu/gorm",
      "model": "github.com/raahii/golang-grpc-realworld-example/model"
    },
    "package_name": "store",
    "imports": "import (\n\t\"github.com/jinzhu/gorm\"\n\t\"github.com/raahii/golang-grpc-realworld-example/model\"\n)\n"
  }
}